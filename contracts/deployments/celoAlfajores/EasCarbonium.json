{
  "address": "0xf63c588b6790a18a4414a90586EB4A37E8B82037",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "uid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "attester",
          "type": "address"
        }
      ],
      "name": "AttestationSucceeded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "AttestationRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "projectName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "vintage",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "standard",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "methodology",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditAmount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "issuerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "issuerCountry",
              "type": "string"
            }
          ],
          "internalType": "struct EasCarbonium.AttestationData",
          "name": "data",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "attester",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_attestationCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "projectName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "vintage",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "standard",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "methodology",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "creditAmount",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "issuerName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "issuerCountry",
              "type": "string"
            }
          ],
          "internalType": "struct EasCarbonium.AttestationData",
          "name": "inputParams",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "attest",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "uid",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7edcaccec54b4b2a73578d5e6e454456db24ac80704b7a755e0f342a526ed4ce",
  "receipt": {
    "to": null,
    "from": "0xe360218D76AAfb7C2DdB3711F272893c86402db7",
    "contractAddress": "0xf63c588b6790a18a4414a90586EB4A37E8B82037",
    "transactionIndex": 0,
    "gasUsed": "932811",
    "logsBloom": "0x
    "blockHash": "0xd1015e9449b9108f3a3579baae619255c2f6a6d20c8388ff21eb742fd2cbdf94",
    "transactionHash": "0x7edcaccec54b4b2a73578d5e6e454456db24ac80704b7a755e0f342a526ed4ce",
    "logs": [],
    "blockNumber": 21003400,
    "cumulativeGasUsed": "932811",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "403f5dbd2591b6fcf064c453fbcf2dd6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"name\":\"AttestationSucceeded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"AttestationRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"projectName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vintage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"standard\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"methodology\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"issuerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"issuerCountry\",\"type\":\"string\"}],\"internalType\":\"struct EasCarbonium.AttestationData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"attester\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_attestationCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"projectName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"vintage\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"standard\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"methodology\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"creditAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"issuerName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"issuerCountry\",\"type\":\"string\"}],\"internalType\":\"struct EasCarbonium.AttestationData\",\"name\":\"inputParams\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"attest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"uid\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EasCarbonium.sol\":\"EasCarbonium\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"contracts/EasCarbonium.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\r\\n\\r\\ncontract EasCarbonium {\\r\\n    using Counters for Counters.Counter;\\r\\n\\r\\n     Counters.Counter public _attestationCounter; \\r\\n\\r\\n    struct AttestationData {\\r\\n        string projectName;\\r\\n        string country;\\r\\n        string vintage;\\r\\n        string standard;\\r\\n        uint256 methodology;\\r\\n        uint256 creditAmount;\\r\\n        string issuerName;\\r\\n        string issuerCountry;\\r\\n    }\\r\\n\\r\\n    struct Schema{\\r\\n        address recipient;\\r\\n        AttestationData data;\\r\\n        address attester;\\r\\n    }\\r\\n\\r\\n    mapping(uint256 => Schema) public AttestationRegistry;\\r\\n\\r\\n    event AttestationSucceeded(\\r\\n        uint256 uid,\\r\\n        address recipient,\\r\\n        address attester\\r\\n    );\\r\\n\\r\\n    function attest(AttestationData memory inputParams, address _recipient)\\r\\n        public\\r\\n     returns(uint256 uid)\\r\\n    {\\r\\n        _attestationCounter.increment();\\r\\n        uint256 _uid = _attestationCounter.current();\\r\\n        AttestationRegistry[_uid] = Schema(_recipient, inputParams, msg.sender);\\r\\n\\r\\n        emit AttestationSucceeded(_uid, _recipient, msg.sender);\\r\\n        return _uid;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x896a2df0d7dc3b6b52d9e12333898a2251db0731305a903cc442070470fe5046\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610fee806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063281618f9146100465780635d2de53d1461006457806368d5a71f14610096575b600080fd5b61004e6100c6565b60405161005b91906106f1565b60405180910390f35b61007e6004803603810190610079919061074c565b6100d2565b60405161008d9392919061092c565b60405180910390f35b6100b060048036038101906100ab9190610c47565b6104c7565b6040516100bd91906106f1565b60405180910390f35b60008060000154905081565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001016040518061010001604052908160008201805461012c90610cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461015890610cd2565b80156101a55780601f1061017a576101008083540402835291602001916101a5565b820191906000526020600020905b81548152906001019060200180831161018857829003601f168201915b505050505081526020016001820180546101be90610cd2565b80601f01602080910402602001604051908101604052809291908181526020018280546101ea90610cd2565b80156102375780601f1061020c57610100808354040283529160200191610237565b820191906000526020600020905b81548152906001019060200180831161021a57829003601f168201915b5050505050815260200160028201805461025090610cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461027c90610cd2565b80156102c95780601f1061029e576101008083540402835291602001916102c9565b820191906000526020600020905b8154815290600101906020018083116102ac57829003601f168201915b505050505081526020016003820180546102e290610cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461030e90610cd2565b801561035b5780601f106103305761010080835404028352916020019161035b565b820191906000526020600020905b81548152906001019060200180831161033e57829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201805461038890610cd2565b80601f01602080910402602001604051908101604052809291908181526020018280546103b490610cd2565b80156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050815260200160078201805461041a90610cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461044690610cd2565b80156104935780601f1061046857610100808354040283529160200191610493565b820191906000526020600020905b81548152906001019060200180831161047657829003601f168201915b505050505081525050908060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60006104d360006106b4565b60006104df60006106ca565b905060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff168152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160008201518160000190816105a09190610eaf565b5060208201518160010190816105b69190610eaf565b5060408201518160020190816105cc9190610eaf565b5060608201518160030190816105e29190610eaf565b506080820151816004015560a0820151816005015560c082015181600601908161060c9190610eaf565b5060e08201518160070190816106229190610eaf565b50505060408201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507febae19f002de4faa836327474251f223a6491b95f52e1f7c7a3b15321a7d431d8184336040516106a293929190610f81565b60405180910390a18091505092915050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6000819050919050565b6106eb816106d8565b82525050565b600060208201905061070660008301846106e2565b92915050565b6000604051905090565b600080fd5b600080fd5b610729816106d8565b811461073457600080fd5b50565b60008135905061074681610720565b92915050565b60006020828403121561076257610761610716565b5b600061077084828501610737565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a482610779565b9050919050565b6107b481610799565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107f45780820151818401526020810190506107d9565b60008484015250505050565b6000601f19601f8301169050919050565b600061081c826107ba565b61082681856107c5565b93506108368185602086016107d6565b61083f81610800565b840191505092915050565b610853816106d8565b82525050565b60006101008301600083015184820360008601526108778282610811565b915050602083015184820360208601526108918282610811565b915050604083015184820360408601526108ab8282610811565b915050606083015184820360608601526108c58282610811565b91505060808301516108da608086018261084a565b5060a08301516108ed60a086018261084a565b5060c083015184820360c08601526109058282610811565b91505060e083015184820360e086015261091f8282610811565b9150508091505092915050565b600060608201905061094160008301866107ab565b81810360208301526109538185610859565b905061096260408301846107ab565b949350505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109a782610800565b810181811067ffffffffffffffff821117156109c6576109c561096f565b5b80604052505050565b60006109d961070c565b90506109e5828261099e565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610a1457610a1361096f565b5b610a1d82610800565b9050602081019050919050565b82818337600083830152505050565b6000610a4c610a47846109f9565b6109cf565b905082815260208101848484011115610a6857610a676109f4565b5b610a73848285610a2a565b509392505050565b600082601f830112610a9057610a8f6109ef565b5b8135610aa0848260208601610a39565b91505092915050565b60006101008284031215610ac057610abf61096a565b5b610acb6101006109cf565b9050600082013567ffffffffffffffff811115610aeb57610aea6109ea565b5b610af784828501610a7b565b600083015250602082013567ffffffffffffffff811115610b1b57610b1a6109ea565b5b610b2784828501610a7b565b602083015250604082013567ffffffffffffffff811115610b4b57610b4a6109ea565b5b610b5784828501610a7b565b604083015250606082013567ffffffffffffffff811115610b7b57610b7a6109ea565b5b610b8784828501610a7b565b6060830152506080610b9b84828501610737565b60808301525060a0610baf84828501610737565b60a08301525060c082013567ffffffffffffffff811115610bd357610bd26109ea565b5b610bdf84828501610a7b565b60c08301525060e082013567ffffffffffffffff811115610c0357610c026109ea565b5b610c0f84828501610a7b565b60e08301525092915050565b610c2481610799565b8114610c2f57600080fd5b50565b600081359050610c4181610c1b565b92915050565b60008060408385031215610c5e57610c5d610716565b5b600083013567ffffffffffffffff811115610c7c57610c7b61071b565b5b610c8885828601610aa9565b9250506020610c9985828601610c32565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cea57607f821691505b602082108103610cfd57610cfc610ca3565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610d657fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610d28565b610d6f8683610d28565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610dac610da7610da2846106d8565b610d87565b6106d8565b9050919050565b6000819050919050565b610dc683610d91565b610dda610dd282610db3565b848454610d35565b825550505050565b600090565b610def610de2565b610dfa818484610dbd565b505050565b5b81811015610e1e57610e13600082610de7565b600181019050610e00565b5050565b601f821115610e6357610e3481610d03565b610e3d84610d18565b81016020851015610e4c578190505b610e60610e5885610d18565b830182610dff565b50505b505050565b600082821c905092915050565b6000610e8660001984600802610e68565b1980831691505092915050565b6000610e9f8383610e75565b9150826002028217905092915050565b610eb8826107ba565b67ffffffffffffffff811115610ed157610ed061096f565b5b610edb8254610cd2565b610ee6828285610e22565b600060209050601f831160018114610f195760008415610f07578287015190505b610f118582610e93565b865550610f79565b601f198416610f2786610d03565b60005b82811015610f4f57848901518255600182019150602085019450602081019050610f2a565b86831015610f6c5784890151610f68601f891682610e75565b8355505b6001600288020188555050505b505050505050565b6000606082019050610f9660008301866106e2565b610fa360208301856107ab565b610fb060408301846107ab565b94935050505056fea264697066735822122055a6e14642f152c2fd3386ac9efe433b58def8db595d6cb18171a98bf77bd09564736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063281618f9146100465780635d2de53d1461006457806368d5a71f14610096575b600080fd5b61004e6100c6565b60405161005b91906106f1565b60405180910390f35b61007e6004803603810190610079919061074c565b6100d2565b60405161008d9392919061092c565b60405180910390f35b6100b060048036038101906100ab9190610c47565b6104c7565b6040516100bd91906106f1565b60405180910390f35b60008060000154905081565b60016020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001016040518061010001604052908160008201805461012c90610cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461015890610cd2565b80156101a55780601f1061017a576101008083540402835291602001916101a5565b820191906000526020600020905b81548152906001019060200180831161018857829003601f168201915b505050505081526020016001820180546101be90610cd2565b80601f01602080910402602001604051908101604052809291908181526020018280546101ea90610cd2565b80156102375780601f1061020c57610100808354040283529160200191610237565b820191906000526020600020905b81548152906001019060200180831161021a57829003601f168201915b5050505050815260200160028201805461025090610cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461027c90610cd2565b80156102c95780601f1061029e576101008083540402835291602001916102c9565b820191906000526020600020905b8154815290600101906020018083116102ac57829003601f168201915b505050505081526020016003820180546102e290610cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461030e90610cd2565b801561035b5780601f106103305761010080835404028352916020019161035b565b820191906000526020600020905b81548152906001019060200180831161033e57829003601f168201915b50505050508152602001600482015481526020016005820154815260200160068201805461038890610cd2565b80601f01602080910402602001604051908101604052809291908181526020018280546103b490610cd2565b80156104015780601f106103d657610100808354040283529160200191610401565b820191906000526020600020905b8154815290600101906020018083116103e457829003601f168201915b5050505050815260200160078201805461041a90610cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461044690610cd2565b80156104935780601f1061046857610100808354040283529160200191610493565b820191906000526020600020905b81548152906001019060200180831161047657829003601f168201915b505050505081525050908060090160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905083565b60006104d360006106b4565b60006104df60006106ca565b905060405180606001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018581526020013373ffffffffffffffffffffffffffffffffffffffff168152506001600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160008201518160000190816105a09190610eaf565b5060208201518160010190816105b69190610eaf565b5060408201518160020190816105cc9190610eaf565b5060608201518160030190816105e29190610eaf565b506080820151816004015560a0820151816005015560c082015181600601908161060c9190610eaf565b5060e08201518160070190816106229190610eaf565b50505060408201518160090160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507febae19f002de4faa836327474251f223a6491b95f52e1f7c7a3b15321a7d431d8184336040516106a293929190610f81565b60405180910390a18091505092915050565b6001816000016000828254019250508190555050565b600081600001549050919050565b6000819050919050565b6106eb816106d8565b82525050565b600060208201905061070660008301846106e2565b92915050565b6000604051905090565b600080fd5b600080fd5b610729816106d8565b811461073457600080fd5b50565b60008135905061074681610720565b92915050565b60006020828403121561076257610761610716565b5b600061077084828501610737565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107a482610779565b9050919050565b6107b481610799565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156107f45780820151818401526020810190506107d9565b60008484015250505050565b6000601f19601f8301169050919050565b600061081c826107ba565b61082681856107c5565b93506108368185602086016107d6565b61083f81610800565b840191505092915050565b610853816106d8565b82525050565b60006101008301600083015184820360008601526108778282610811565b915050602083015184820360208601526108918282610811565b915050604083015184820360408601526108ab8282610811565b915050606083015184820360608601526108c58282610811565b91505060808301516108da608086018261084a565b5060a08301516108ed60a086018261084a565b5060c083015184820360c08601526109058282610811565b91505060e083015184820360e086015261091f8282610811565b9150508091505092915050565b600060608201905061094160008301866107ab565b81810360208301526109538185610859565b905061096260408301846107ab565b949350505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6109a782610800565b810181811067ffffffffffffffff821117156109c6576109c561096f565b5b80604052505050565b60006109d961070c565b90506109e5828261099e565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610a1457610a1361096f565b5b610a1d82610800565b9050602081019050919050565b82818337600083830152505050565b6000610a4c610a47846109f9565b6109cf565b905082815260208101848484011115610a6857610a676109f4565b5b610a73848285610a2a565b509392505050565b600082601f830112610a9057610a8f6109ef565b5b8135610aa0848260208601610a39565b91505092915050565b60006101008284031215610ac057610abf61096a565b5b610acb6101006109cf565b9050600082013567ffffffffffffffff811115610aeb57610aea6109ea565b5b610af784828501610a7b565b600083015250602082013567ffffffffffffffff811115610b1b57610b1a6109ea565b5b610b2784828501610a7b565b602083015250604082013567ffffffffffffffff811115610b4b57610b4a6109ea565b5b610b5784828501610a7b565b604083015250606082013567ffffffffffffffff811115610b7b57610b7a6109ea565b5b610b8784828501610a7b565b6060830152506080610b9b84828501610737565b60808301525060a0610baf84828501610737565b60a08301525060c082013567ffffffffffffffff811115610bd357610bd26109ea565b5b610bdf84828501610a7b565b60c08301525060e082013567ffffffffffffffff811115610c0357610c026109ea565b5b610c0f84828501610a7b565b60e08301525092915050565b610c2481610799565b8114610c2f57600080fd5b50565b600081359050610c4181610c1b565b92915050565b60008060408385031215610c5e57610c5d610716565b5b600083013567ffffffffffffffff811115610c7c57610c7b61071b565b5b610c8885828601610aa9565b9250506020610c9985828601610c32565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610cea57607f821691505b602082108103610cfd57610cfc610ca3565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610d657fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610d28565b610d6f8683610d28565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610dac610da7610da2846106d8565b610d87565b6106d8565b9050919050565b6000819050919050565b610dc683610d91565b610dda610dd282610db3565b848454610d35565b825550505050565b600090565b610def610de2565b610dfa818484610dbd565b505050565b5b81811015610e1e57610e13600082610de7565b600181019050610e00565b5050565b601f821115610e6357610e3481610d03565b610e3d84610d18565b81016020851015610e4c578190505b610e60610e5885610d18565b830182610dff565b50505b505050565b600082821c905092915050565b6000610e8660001984600802610e68565b1980831691505092915050565b6000610e9f8383610e75565b9150826002028217905092915050565b610eb8826107ba565b67ffffffffffffffff811115610ed157610ed061096f565b5b610edb8254610cd2565b610ee6828285610e22565b600060209050601f831160018114610f195760008415610f07578287015190505b610f118582610e93565b865550610f79565b601f198416610f2786610d03565b60005b82811015610f4f57848901518255600182019150602085019450602081019050610f2a565b86831015610f6c5784890151610f68601f891682610e75565b8355505b6001600288020188555050505b505050505050565b6000606082019050610f9660008301866106e2565b610fa360208301856107ab565b610fb060408301846107ab565b94935050505056fea264697066735822122055a6e14642f152c2fd3386ac9efe433b58def8db595d6cb18171a98bf77bd09564736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3167,
        "contract": "contracts/EasCarbonium.sol:EasCarbonium",
        "label": "_attestationCounter",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(Counter)2477_storage"
      },
      {
        "astId": 3197,
        "contract": "contracts/EasCarbonium.sol:EasCarbonium",
        "label": "AttestationRegistry",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Schema)3192_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(Schema)3192_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct EasCarbonium.Schema)",
        "numberOfBytes": "32",
        "value": "t_struct(Schema)3192_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(AttestationData)3184_storage": {
        "encoding": "inplace",
        "label": "struct EasCarbonium.AttestationData",
        "members": [
          {
            "astId": 3169,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "projectName",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3171,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "country",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 3173,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "vintage",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3175,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "standard",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 3177,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "methodology",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 3179,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "creditAmount",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 3181,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "issuerName",
            "offset": 0,
            "slot": "6",
            "type": "t_string_storage"
          },
          {
            "astId": 3183,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "issuerCountry",
            "offset": 0,
            "slot": "7",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "256"
      },
      "t_struct(Counter)2477_storage": {
        "encoding": "inplace",
        "label": "struct Counters.Counter",
        "members": [
          {
            "astId": 2476,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "_value",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(Schema)3192_storage": {
        "encoding": "inplace",
        "label": "struct EasCarbonium.Schema",
        "members": [
          {
            "astId": 3186,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "recipient",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 3189,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "data",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(AttestationData)3184_storage"
          },
          {
            "astId": 3191,
            "contract": "contracts/EasCarbonium.sol:EasCarbonium",
            "label": "attester",
            "offset": 0,
            "slot": "9",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}