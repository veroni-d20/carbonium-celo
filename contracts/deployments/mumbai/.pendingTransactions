{
  "0xe7ba7f00499f2e9cdcf8e5af56b8c9ffebc02cdea5de631f684bde7211f7ff1d": {
    "name": "LiquidityPool",
    "deployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "LiquidityPool",
      "sourceName": "contracts/LiquidityPool.sol",
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_erc1155Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_erc20Token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Deposit",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "erc1155Amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "erc20Amount",
              "type": "uint256"
            }
          ],
          "name": "SwapERC1155ForERC20",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "user",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "erc20Amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "erc1155Amount",
              "type": "uint256"
            }
          ],
          "name": "SwapERC20ForERC1155",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "Withdrawal",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "erc1155Token",
          "outputs": [
            {
              "internalType": "contract IERC1155",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "erc20Token",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "erc1155Amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getQuoteERC1155ToERC20",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "erc20Amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "erc20Amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "getQuoteERC20ToERC1155",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "erc1155Amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "erc1155Amount",
              "type": "uint256"
            }
          ],
          "name": "swapERC1155ForERC20",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "erc20Amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "swapERC20ForERC1155",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        }
      ],
      "bytecode": "0x60806040523480156200001157600080fd5b5060405162001bdb38038062001bdb833981810160405281019062000037919062000217565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b620001f181620001d2565b8114620001fd57600080fd5b50565b6000815190506200021181620001e6565b92915050565b60008060408385031215620002315762000230620001ad565b5b6000620002418582860162000200565b9250506020620002548582860162000200565b9150509250929050565b61196d806200026e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bc124c5811610071578063bc124c581461017d578063bc197c8114610199578063c215a97c146101c9578063d7695990146101e5578063f23a6e6114610215578063f2fde38b14610245576100b4565b806301ffc9a7146100b957806321f42268146100e9578063715018a6146101075780638a13eea7146101115780638da5cb5b1461012f57806393068df21461014d575b600080fd5b6100d360048036038101906100ce9190610e89565b610261565b6040516100e09190610ed1565b60405180910390f35b6100f16102db565b6040516100fe9190610f6b565b60405180910390f35b61010f610301565b005b610119610389565b6040516101269190610fa7565b60405180910390f35b6101376103af565b6040516101449190610fe3565b60405180910390f35b61016760048036038101906101629190611034565b6103d8565b6040516101749190611083565b60405180910390f35b61019760048036038101906101929190611034565b61058c565b005b6101b360048036038101906101ae91906112d8565b6107b8565b6040516101c091906113b6565b60405180910390f35b6101e360048036038101906101de9190611034565b6107cd565b005b6101ff60048036038101906101fa9190611034565b6109fb565b60405161020c9190611083565b60405180910390f35b61022f600480360381019061022a91906113d1565b610baf565b60405161023c91906113b6565b60405180910390f35b61025f600480360381019061025a9190611468565b610bc4565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102d457506102d382610cbb565b5b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610309610d25565b73ffffffffffffffffffffffffffffffffffffffff166103276103af565b73ffffffffffffffffffffffffffffffffffffffff161461037d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610374906114f2565b60405180910390fd5b6103876000610d2d565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080831161041c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104139061155e565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104799190610fe3565b602060405180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190611593565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30866040518363ffffffff1660e01b815260040161051a9291906115c0565b602060405180830381865afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190611593565b9050610582826105748388610df190919063ffffffff16565b610e0790919063ffffffff16565b9250505092915050565b600081116105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c690611635565b60405180910390fd5b60006105db82846109fb565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333086866040518563ffffffff1660e01b815260040161063e949392919061168c565b600060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106cd9291906115c0565b6020604051808303816000875af11580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107109190611710565b503373ffffffffffffffffffffffffffffffffffffffff167fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb848460405161075992919061173d565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f048b2ef2f7efb11fef3b83a2e524d39e3d9366a7cd9a756981f750e5ab527db48484846040516107ab93929190611766565b60405180910390a2505050565b600063bc197c8160e01b905095945050505050565b60008211610810576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108079061155e565b60405180910390fd5b600061081c83836103d8565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161087d9392919061179d565b6020604051808303816000875af115801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c09190611710565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333085856040518563ffffffff1660e01b8152600401610922949392919061168c565b600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15838360405161099c92919061173d565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f72d229d9b6fbfec38d163ea1310b2549d831f540e79b7194a93fe94b843789878484846040516109ee93929190611766565b60405180910390a2505050565b6000808311610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3690611635565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a9c9190610fe3565b602060405180830381865afa158015610ab9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610add9190611593565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30866040518363ffffffff1660e01b8152600401610b3d9291906115c0565b602060405180830381865afa158015610b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7e9190611593565b9050610ba581610b978488610df190919063ffffffff16565b610e0790919063ffffffff16565b9250505092915050565b600063f23a6e6160e01b905095945050505050565b610bcc610d25565b73ffffffffffffffffffffffffffffffffffffffff16610bea6103af565b73ffffffffffffffffffffffffffffffffffffffff1614610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c37906114f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610caf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca690611846565b60405180910390fd5b610cb881610d2d565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610dff9190611895565b905092915050565b60008183610e159190611906565b905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e6681610e31565b8114610e7157600080fd5b50565b600081359050610e8381610e5d565b92915050565b600060208284031215610e9f57610e9e610e27565b5b6000610ead84828501610e74565b91505092915050565b60008115159050919050565b610ecb81610eb6565b82525050565b6000602082019050610ee66000830184610ec2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f31610f2c610f2784610eec565b610f0c565b610eec565b9050919050565b6000610f4382610f16565b9050919050565b6000610f5582610f38565b9050919050565b610f6581610f4a565b82525050565b6000602082019050610f806000830184610f5c565b92915050565b6000610f9182610f38565b9050919050565b610fa181610f86565b82525050565b6000602082019050610fbc6000830184610f98565b92915050565b6000610fcd82610eec565b9050919050565b610fdd81610fc2565b82525050565b6000602082019050610ff86000830184610fd4565b92915050565b6000819050919050565b61101181610ffe565b811461101c57600080fd5b50565b60008135905061102e81611008565b92915050565b6000806040838503121561104b5761104a610e27565b5b60006110598582860161101f565b925050602061106a8582860161101f565b9150509250929050565b61107d81610ffe565b82525050565b60006020820190506110986000830184611074565b92915050565b6110a781610fc2565b81146110b257600080fd5b50565b6000813590506110c48161109e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611118826110cf565b810181811067ffffffffffffffff82111715611137576111366110e0565b5b80604052505050565b600061114a610e1d565b9050611156828261110f565b919050565b600067ffffffffffffffff821115611176576111756110e0565b5b602082029050602081019050919050565b600080fd5b600061119f61119a8461115b565b611140565b905080838252602082019050602084028301858111156111c2576111c1611187565b5b835b818110156111eb57806111d7888261101f565b8452602084019350506020810190506111c4565b5050509392505050565b600082601f83011261120a576112096110ca565b5b813561121a84826020860161118c565b91505092915050565b600080fd5b600067ffffffffffffffff821115611243576112426110e0565b5b61124c826110cf565b9050602081019050919050565b82818337600083830152505050565b600061127b61127684611228565b611140565b90508281526020810184848401111561129757611296611223565b5b6112a2848285611259565b509392505050565b600082601f8301126112bf576112be6110ca565b5b81356112cf848260208601611268565b91505092915050565b600080600080600060a086880312156112f4576112f3610e27565b5b6000611302888289016110b5565b9550506020611313888289016110b5565b945050604086013567ffffffffffffffff81111561133457611333610e2c565b5b611340888289016111f5565b935050606086013567ffffffffffffffff81111561136157611360610e2c565b5b61136d888289016111f5565b925050608086013567ffffffffffffffff81111561138e5761138d610e2c565b5b61139a888289016112aa565b9150509295509295909350565b6113b081610e31565b82525050565b60006020820190506113cb60008301846113a7565b92915050565b600080600080600060a086880312156113ed576113ec610e27565b5b60006113fb888289016110b5565b955050602061140c888289016110b5565b945050604061141d8882890161101f565b935050606061142e8882890161101f565b925050608086013567ffffffffffffffff81111561144f5761144e610e2c565b5b61145b888289016112aa565b9150509295509295909350565b60006020828403121561147e5761147d610e27565b5b600061148c848285016110b5565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114dc602083611495565b91506114e7826114a6565b602082019050919050565b6000602082019050818103600083015261150b816114cf565b9050919050565b7f496e76616c696420455243323020616d6f756e74000000000000000000000000600082015250565b6000611548601483611495565b915061155382611512565b602082019050919050565b600060208201905081810360008301526115778161153b565b9050919050565b60008151905061158d81611008565b92915050565b6000602082840312156115a9576115a8610e27565b5b60006115b78482850161157e565b91505092915050565b60006040820190506115d56000830185610fd4565b6115e26020830184611074565b9392505050565b7f496e76616c6964204552433131353520616d6f756e7400000000000000000000600082015250565b600061161f601683611495565b915061162a826115e9565b602082019050919050565b6000602082019050818103600083015261164e81611612565b9050919050565b600082825260208201905092915050565b50565b6000611676600083611655565b915061168182611666565b600082019050919050565b600060a0820190506116a16000830187610fd4565b6116ae6020830186610fd4565b6116bb6040830185611074565b6116c86060830184611074565b81810360808301526116d981611669565b905095945050505050565b6116ed81610eb6565b81146116f857600080fd5b50565b60008151905061170a816116e4565b92915050565b60006020828403121561172657611725610e27565b5b6000611734848285016116fb565b91505092915050565b60006040820190506117526000830185611074565b61175f6020830184611074565b9392505050565b600060608201905061177b6000830186611074565b6117886020830185611074565b6117956040830184611074565b949350505050565b60006060820190506117b26000830186610fd4565b6117bf6020830185610fd4565b6117cc6040830184611074565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611830602683611495565b915061183b826117d4565b604082019050919050565b6000602082019050818103600083015261185f81611823565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118a082610ffe565b91506118ab83610ffe565b92508282026118b981610ffe565b915082820484148315176118d0576118cf611866565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061191182610ffe565b915061191c83610ffe565b92508261192c5761192b6118d7565b5b82820490509291505056fea2646970667358221220b4f2d59be3579380b16d6bb5ac5c6805206194ed654c709139bf856a04225c4664736f6c63430008130033",
      "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bc124c5811610071578063bc124c581461017d578063bc197c8114610199578063c215a97c146101c9578063d7695990146101e5578063f23a6e6114610215578063f2fde38b14610245576100b4565b806301ffc9a7146100b957806321f42268146100e9578063715018a6146101075780638a13eea7146101115780638da5cb5b1461012f57806393068df21461014d575b600080fd5b6100d360048036038101906100ce9190610e89565b610261565b6040516100e09190610ed1565b60405180910390f35b6100f16102db565b6040516100fe9190610f6b565b60405180910390f35b61010f610301565b005b610119610389565b6040516101269190610fa7565b60405180910390f35b6101376103af565b6040516101449190610fe3565b60405180910390f35b61016760048036038101906101629190611034565b6103d8565b6040516101749190611083565b60405180910390f35b61019760048036038101906101929190611034565b61058c565b005b6101b360048036038101906101ae91906112d8565b6107b8565b6040516101c091906113b6565b60405180910390f35b6101e360048036038101906101de9190611034565b6107cd565b005b6101ff60048036038101906101fa9190611034565b6109fb565b60405161020c9190611083565b60405180910390f35b61022f600480360381019061022a91906113d1565b610baf565b60405161023c91906113b6565b60405180910390f35b61025f600480360381019061025a9190611468565b610bc4565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102d457506102d382610cbb565b5b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610309610d25565b73ffffffffffffffffffffffffffffffffffffffff166103276103af565b73ffffffffffffffffffffffffffffffffffffffff161461037d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610374906114f2565b60405180910390fd5b6103876000610d2d565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080831161041c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104139061155e565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104799190610fe3565b602060405180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190611593565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30866040518363ffffffff1660e01b815260040161051a9291906115c0565b602060405180830381865afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190611593565b9050610582826105748388610df190919063ffffffff16565b610e0790919063ffffffff16565b9250505092915050565b600081116105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c690611635565b60405180910390fd5b60006105db82846109fb565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333086866040518563ffffffff1660e01b815260040161063e949392919061168c565b600060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106cd9291906115c0565b6020604051808303816000875af11580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107109190611710565b503373ffffffffffffffffffffffffffffffffffffffff167fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb848460405161075992919061173d565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f048b2ef2f7efb11fef3b83a2e524d39e3d9366a7cd9a756981f750e5ab527db48484846040516107ab93929190611766565b60405180910390a2505050565b600063bc197c8160e01b905095945050505050565b60008211610810576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108079061155e565b60405180910390fd5b600061081c83836103d8565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161087d9392919061179d565b6020604051808303816000875af115801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c09190611710565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333085856040518563ffffffff1660e01b8152600401610922949392919061168c565b600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15838360405161099c92919061173d565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f72d229d9b6fbfec38d163ea1310b2549d831f540e79b7194a93fe94b843789878484846040516109ee93929190611766565b60405180910390a2505050565b6000808311610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3690611635565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a9c9190610fe3565b602060405180830381865afa158015610ab9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610add9190611593565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30866040518363ffffffff1660e01b8152600401610b3d9291906115c0565b602060405180830381865afa158015610b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7e9190611593565b9050610ba581610b978488610df190919063ffffffff16565b610e0790919063ffffffff16565b9250505092915050565b600063f23a6e6160e01b905095945050505050565b610bcc610d25565b73ffffffffffffffffffffffffffffffffffffffff16610bea6103af565b73ffffffffffffffffffffffffffffffffffffffff1614610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c37906114f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610caf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca690611846565b60405180910390fd5b610cb881610d2d565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610dff9190611895565b905092915050565b60008183610e159190611906565b905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e6681610e31565b8114610e7157600080fd5b50565b600081359050610e8381610e5d565b92915050565b600060208284031215610e9f57610e9e610e27565b5b6000610ead84828501610e74565b91505092915050565b60008115159050919050565b610ecb81610eb6565b82525050565b6000602082019050610ee66000830184610ec2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f31610f2c610f2784610eec565b610f0c565b610eec565b9050919050565b6000610f4382610f16565b9050919050565b6000610f5582610f38565b9050919050565b610f6581610f4a565b82525050565b6000602082019050610f806000830184610f5c565b92915050565b6000610f9182610f38565b9050919050565b610fa181610f86565b82525050565b6000602082019050610fbc6000830184610f98565b92915050565b6000610fcd82610eec565b9050919050565b610fdd81610fc2565b82525050565b6000602082019050610ff86000830184610fd4565b92915050565b6000819050919050565b61101181610ffe565b811461101c57600080fd5b50565b60008135905061102e81611008565b92915050565b6000806040838503121561104b5761104a610e27565b5b60006110598582860161101f565b925050602061106a8582860161101f565b9150509250929050565b61107d81610ffe565b82525050565b60006020820190506110986000830184611074565b92915050565b6110a781610fc2565b81146110b257600080fd5b50565b6000813590506110c48161109e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611118826110cf565b810181811067ffffffffffffffff82111715611137576111366110e0565b5b80604052505050565b600061114a610e1d565b9050611156828261110f565b919050565b600067ffffffffffffffff821115611176576111756110e0565b5b602082029050602081019050919050565b600080fd5b600061119f61119a8461115b565b611140565b905080838252602082019050602084028301858111156111c2576111c1611187565b5b835b818110156111eb57806111d7888261101f565b8452602084019350506020810190506111c4565b5050509392505050565b600082601f83011261120a576112096110ca565b5b813561121a84826020860161118c565b91505092915050565b600080fd5b600067ffffffffffffffff821115611243576112426110e0565b5b61124c826110cf565b9050602081019050919050565b82818337600083830152505050565b600061127b61127684611228565b611140565b90508281526020810184848401111561129757611296611223565b5b6112a2848285611259565b509392505050565b600082601f8301126112bf576112be6110ca565b5b81356112cf848260208601611268565b91505092915050565b600080600080600060a086880312156112f4576112f3610e27565b5b6000611302888289016110b5565b9550506020611313888289016110b5565b945050604086013567ffffffffffffffff81111561133457611333610e2c565b5b611340888289016111f5565b935050606086013567ffffffffffffffff81111561136157611360610e2c565b5b61136d888289016111f5565b925050608086013567ffffffffffffffff81111561138e5761138d610e2c565b5b61139a888289016112aa565b9150509295509295909350565b6113b081610e31565b82525050565b60006020820190506113cb60008301846113a7565b92915050565b600080600080600060a086880312156113ed576113ec610e27565b5b60006113fb888289016110b5565b955050602061140c888289016110b5565b945050604061141d8882890161101f565b935050606061142e8882890161101f565b925050608086013567ffffffffffffffff81111561144f5761144e610e2c565b5b61145b888289016112aa565b9150509295509295909350565b60006020828403121561147e5761147d610e27565b5b600061148c848285016110b5565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114dc602083611495565b91506114e7826114a6565b602082019050919050565b6000602082019050818103600083015261150b816114cf565b9050919050565b7f496e76616c696420455243323020616d6f756e74000000000000000000000000600082015250565b6000611548601483611495565b915061155382611512565b602082019050919050565b600060208201905081810360008301526115778161153b565b9050919050565b60008151905061158d81611008565b92915050565b6000602082840312156115a9576115a8610e27565b5b60006115b78482850161157e565b91505092915050565b60006040820190506115d56000830185610fd4565b6115e26020830184611074565b9392505050565b7f496e76616c6964204552433131353520616d6f756e7400000000000000000000600082015250565b600061161f601683611495565b915061162a826115e9565b602082019050919050565b6000602082019050818103600083015261164e81611612565b9050919050565b600082825260208201905092915050565b50565b6000611676600083611655565b915061168182611666565b600082019050919050565b600060a0820190506116a16000830187610fd4565b6116ae6020830186610fd4565b6116bb6040830185611074565b6116c86060830184611074565b81810360808301526116d981611669565b905095945050505050565b6116ed81610eb6565b81146116f857600080fd5b50565b60008151905061170a816116e4565b92915050565b60006020828403121561172657611725610e27565b5b6000611734848285016116fb565b91505092915050565b60006040820190506117526000830185611074565b61175f6020830184611074565b9392505050565b600060608201905061177b6000830186611074565b6117886020830185611074565b6117956040830184611074565b949350505050565b60006060820190506117b26000830186610fd4565b6117bf6020830185610fd4565b6117cc6040830184611074565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611830602683611495565b915061183b826117d4565b604082019050919050565b6000602082019050818103600083015261185f81611823565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118a082610ffe565b91506118ab83610ffe565b92508282026118b981610ffe565b915082820484148315176118d0576118cf611866565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061191182610ffe565b915061191c83610ffe565b92508261192c5761192b6118d7565b5b82820490509291505056fea2646970667358221220b4f2d59be3579380b16d6bb5ac5c6805206194ed654c709139bf856a04225c4664736f6c63430008130033",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "kind": "dev",
        "methods": {
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "evm": {
        "bytecode": {
          "functionDebugData": {
            "@_23": {
              "entryPoint": null,
              "id": 23,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_879": {
              "entryPoint": null,
              "id": 879,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_msgSender_442": {
              "entryPoint": 225,
              "id": 442,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_transferOwnership_103": {
              "entryPoint": 233,
              "id": 103,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "abi_decode_t_address_fromMemory": {
              "entryPoint": 512,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_address_fromMemory": {
              "entryPoint": 535,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "allocate_unbounded": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "cleanup_t_address": {
              "entryPoint": 466,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint160": {
              "entryPoint": 434,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
              "entryPoint": 429,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "validator_revert_t_address": {
              "entryPoint": 486,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:1355:11",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "47:35:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "57:19:11",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "73:2:11",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "67:5:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "67:9:11"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "57:6:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "allocate_unbounded",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "40:6:11",
                        "type": ""
                      }
                    ],
                    "src": "7:75:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "177:28:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "194:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "197:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "187:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "187:12:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "187:12:11"
                        }
                      ]
                    },
                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    "nodeType": "YulFunctionDefinition",
                    "src": "88:117:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "300:28:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "317:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "320:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "310:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "310:12:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "310:12:11"
                        }
                      ]
                    },
                    "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                    "nodeType": "YulFunctionDefinition",
                    "src": "211:117:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "379:81:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "389:65:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "404:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "411:42:11",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "400:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "400:54:11"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "389:7:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint160",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "361:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "371:7:11",
                        "type": ""
                      }
                    ],
                    "src": "334:126:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "511:51:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "521:35:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "550:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "532:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "532:24:11"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "521:7:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "493:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "503:7:11",
                        "type": ""
                      }
                    ],
                    "src": "466:96:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "611:79:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "668:16:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "677:1:11",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "680:1:11",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "670:6:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "670:12:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "670:12:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "634:5:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "659:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "641:17:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "641:24:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "631:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "631:35:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "624:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "624:43:11"
                          },
                          "nodeType": "YulIf",
                          "src": "621:63:11"
                        }
                      ]
                    },
                    "name": "validator_revert_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "604:5:11",
                        "type": ""
                      }
                    ],
                    "src": "568:122:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "759:80:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "769:22:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "784:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "778:5:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "778:13:11"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "769:5:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "827:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "800:26:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "800:33:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "800:33:11"
                        }
                      ]
                    },
                    "name": "abi_decode_t_address_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "737:6:11",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "745:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "753:5:11",
                        "type": ""
                      }
                    ],
                    "src": "696:143:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "939:413:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "985:83:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "987:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "987:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "987:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "960:7:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "969:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "956:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "956:23:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "981:2:11",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "952:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "952:32:11"
                          },
                          "nodeType": "YulIf",
                          "src": "949:119:11"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "1078:128:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1093:15:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1107:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1097:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1122:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1168:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1179:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1164:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1164:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1188:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1132:31:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1132:64:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1122:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "1216:129:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1231:16:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1245:2:11",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1235:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1261:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1307:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1318:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1303:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1303:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1327:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1271:31:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1271:64:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1261:6:11"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_address_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "901:9:11",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "912:7:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "924:6:11",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "932:6:11",
                        "type": ""
                      }
                    ],
                    "src": "845:507:11"
                  }
                ]
              },
              "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
              "id": 11,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "linkReferences": {},
          "object": "60806040523480156200001157600080fd5b5060405162001bdb38038062001bdb833981810160405281019062000037919062000217565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b620001f181620001d2565b8114620001fd57600080fd5b50565b6000815190506200021181620001e6565b92915050565b60008060408385031215620002315762000230620001ad565b5b6000620002418582860162000200565b9250506020620002548582860162000200565b9150509250929050565b61196d806200026e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bc124c5811610071578063bc124c581461017d578063bc197c8114610199578063c215a97c146101c9578063d7695990146101e5578063f23a6e6114610215578063f2fde38b14610245576100b4565b806301ffc9a7146100b957806321f42268146100e9578063715018a6146101075780638a13eea7146101115780638da5cb5b1461012f57806393068df21461014d575b600080fd5b6100d360048036038101906100ce9190610e89565b610261565b6040516100e09190610ed1565b60405180910390f35b6100f16102db565b6040516100fe9190610f6b565b60405180910390f35b61010f610301565b005b610119610389565b6040516101269190610fa7565b60405180910390f35b6101376103af565b6040516101449190610fe3565b60405180910390f35b61016760048036038101906101629190611034565b6103d8565b6040516101749190611083565b60405180910390f35b61019760048036038101906101929190611034565b61058c565b005b6101b360048036038101906101ae91906112d8565b6107b8565b6040516101c091906113b6565b60405180910390f35b6101e360048036038101906101de9190611034565b6107cd565b005b6101ff60048036038101906101fa9190611034565b6109fb565b60405161020c9190611083565b60405180910390f35b61022f600480360381019061022a91906113d1565b610baf565b60405161023c91906113b6565b60405180910390f35b61025f600480360381019061025a9190611468565b610bc4565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102d457506102d382610cbb565b5b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610309610d25565b73ffffffffffffffffffffffffffffffffffffffff166103276103af565b73ffffffffffffffffffffffffffffffffffffffff161461037d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610374906114f2565b60405180910390fd5b6103876000610d2d565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080831161041c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104139061155e565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104799190610fe3565b602060405180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190611593565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30866040518363ffffffff1660e01b815260040161051a9291906115c0565b602060405180830381865afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190611593565b9050610582826105748388610df190919063ffffffff16565b610e0790919063ffffffff16565b9250505092915050565b600081116105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c690611635565b60405180910390fd5b60006105db82846109fb565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333086866040518563ffffffff1660e01b815260040161063e949392919061168c565b600060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106cd9291906115c0565b6020604051808303816000875af11580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107109190611710565b503373ffffffffffffffffffffffffffffffffffffffff167fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb848460405161075992919061173d565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f048b2ef2f7efb11fef3b83a2e524d39e3d9366a7cd9a756981f750e5ab527db48484846040516107ab93929190611766565b60405180910390a2505050565b600063bc197c8160e01b905095945050505050565b60008211610810576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108079061155e565b60405180910390fd5b600061081c83836103d8565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161087d9392919061179d565b6020604051808303816000875af115801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c09190611710565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333085856040518563ffffffff1660e01b8152600401610922949392919061168c565b600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15838360405161099c92919061173d565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f72d229d9b6fbfec38d163ea1310b2549d831f540e79b7194a93fe94b843789878484846040516109ee93929190611766565b60405180910390a2505050565b6000808311610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3690611635565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a9c9190610fe3565b602060405180830381865afa158015610ab9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610add9190611593565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30866040518363ffffffff1660e01b8152600401610b3d9291906115c0565b602060405180830381865afa158015610b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7e9190611593565b9050610ba581610b978488610df190919063ffffffff16565b610e0790919063ffffffff16565b9250505092915050565b600063f23a6e6160e01b905095945050505050565b610bcc610d25565b73ffffffffffffffffffffffffffffffffffffffff16610bea6103af565b73ffffffffffffffffffffffffffffffffffffffff1614610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c37906114f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610caf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca690611846565b60405180910390fd5b610cb881610d2d565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610dff9190611895565b905092915050565b60008183610e159190611906565b905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e6681610e31565b8114610e7157600080fd5b50565b600081359050610e8381610e5d565b92915050565b600060208284031215610e9f57610e9e610e27565b5b6000610ead84828501610e74565b91505092915050565b60008115159050919050565b610ecb81610eb6565b82525050565b6000602082019050610ee66000830184610ec2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f31610f2c610f2784610eec565b610f0c565b610eec565b9050919050565b6000610f4382610f16565b9050919050565b6000610f5582610f38565b9050919050565b610f6581610f4a565b82525050565b6000602082019050610f806000830184610f5c565b92915050565b6000610f9182610f38565b9050919050565b610fa181610f86565b82525050565b6000602082019050610fbc6000830184610f98565b92915050565b6000610fcd82610eec565b9050919050565b610fdd81610fc2565b82525050565b6000602082019050610ff86000830184610fd4565b92915050565b6000819050919050565b61101181610ffe565b811461101c57600080fd5b50565b60008135905061102e81611008565b92915050565b6000806040838503121561104b5761104a610e27565b5b60006110598582860161101f565b925050602061106a8582860161101f565b9150509250929050565b61107d81610ffe565b82525050565b60006020820190506110986000830184611074565b92915050565b6110a781610fc2565b81146110b257600080fd5b50565b6000813590506110c48161109e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611118826110cf565b810181811067ffffffffffffffff82111715611137576111366110e0565b5b80604052505050565b600061114a610e1d565b9050611156828261110f565b919050565b600067ffffffffffffffff821115611176576111756110e0565b5b602082029050602081019050919050565b600080fd5b600061119f61119a8461115b565b611140565b905080838252602082019050602084028301858111156111c2576111c1611187565b5b835b818110156111eb57806111d7888261101f565b8452602084019350506020810190506111c4565b5050509392505050565b600082601f83011261120a576112096110ca565b5b813561121a84826020860161118c565b91505092915050565b600080fd5b600067ffffffffffffffff821115611243576112426110e0565b5b61124c826110cf565b9050602081019050919050565b82818337600083830152505050565b600061127b61127684611228565b611140565b90508281526020810184848401111561129757611296611223565b5b6112a2848285611259565b509392505050565b600082601f8301126112bf576112be6110ca565b5b81356112cf848260208601611268565b91505092915050565b600080600080600060a086880312156112f4576112f3610e27565b5b6000611302888289016110b5565b9550506020611313888289016110b5565b945050604086013567ffffffffffffffff81111561133457611333610e2c565b5b611340888289016111f5565b935050606086013567ffffffffffffffff81111561136157611360610e2c565b5b61136d888289016111f5565b925050608086013567ffffffffffffffff81111561138e5761138d610e2c565b5b61139a888289016112aa565b9150509295509295909350565b6113b081610e31565b82525050565b60006020820190506113cb60008301846113a7565b92915050565b600080600080600060a086880312156113ed576113ec610e27565b5b60006113fb888289016110b5565b955050602061140c888289016110b5565b945050604061141d8882890161101f565b935050606061142e8882890161101f565b925050608086013567ffffffffffffffff81111561144f5761144e610e2c565b5b61145b888289016112aa565b9150509295509295909350565b60006020828403121561147e5761147d610e27565b5b600061148c848285016110b5565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114dc602083611495565b91506114e7826114a6565b602082019050919050565b6000602082019050818103600083015261150b816114cf565b9050919050565b7f496e76616c696420455243323020616d6f756e74000000000000000000000000600082015250565b6000611548601483611495565b915061155382611512565b602082019050919050565b600060208201905081810360008301526115778161153b565b9050919050565b60008151905061158d81611008565b92915050565b6000602082840312156115a9576115a8610e27565b5b60006115b78482850161157e565b91505092915050565b60006040820190506115d56000830185610fd4565b6115e26020830184611074565b9392505050565b7f496e76616c6964204552433131353520616d6f756e7400000000000000000000600082015250565b600061161f601683611495565b915061162a826115e9565b602082019050919050565b6000602082019050818103600083015261164e81611612565b9050919050565b600082825260208201905092915050565b50565b6000611676600083611655565b915061168182611666565b600082019050919050565b600060a0820190506116a16000830187610fd4565b6116ae6020830186610fd4565b6116bb6040830185611074565b6116c86060830184611074565b81810360808301526116d981611669565b905095945050505050565b6116ed81610eb6565b81146116f857600080fd5b50565b60008151905061170a816116e4565b92915050565b60006020828403121561172657611725610e27565b5b6000611734848285016116fb565b91505092915050565b60006040820190506117526000830185611074565b61175f6020830184611074565b9392505050565b600060608201905061177b6000830186611074565b6117886020830185611074565b6117956040830184611074565b949350505050565b60006060820190506117b26000830186610fd4565b6117bf6020830185610fd4565b6117cc6040830184611074565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611830602683611495565b915061183b826117d4565b604082019050919050565b6000602082019050818103600083015261185f81611823565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118a082610ffe565b91506118ab83610ffe565b92508282026118b981610ffe565b915082820484148315176118d0576118cf611866565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061191182610ffe565b915061191c83610ffe565b92508261192c5761192b6118d7565b5b82820490509291505056fea2646970667358221220b4f2d59be3579380b16d6bb5ac5c6805206194ed654c709139bf856a04225c4664736f6c63430008130033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1BDB CODESIZE SUB DUP1 PUSH3 0x1BDB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x217 JUMP JUMPDEST PUSH3 0x57 PUSH3 0x4B PUSH3 0xE1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x25E JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1DF DUP3 PUSH3 0x1B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1F1 DUP2 PUSH3 0x1D2 JUMP JUMPDEST DUP2 EQ PUSH3 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x211 DUP2 PUSH3 0x1E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x1AD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x241 DUP6 DUP3 DUP7 ADD PUSH3 0x200 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x254 DUP6 DUP3 DUP7 ADD PUSH3 0x200 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x196D DUP1 PUSH3 0x26E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC124C58 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC124C58 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xC215A97C EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xD7695990 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x245 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x21F42268 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x8A13EEA7 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x93068DF2 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0xBC4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2D4 JUMPI POP PUSH2 0x2D3 DUP3 PUSH2 0xCBB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x309 PUSH2 0xD25 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x327 PUSH2 0x3AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x387 PUSH1 0x0 PUSH2 0xD2D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x496 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51A SWAP3 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x537 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP PUSH2 0x582 DUP3 PUSH2 0x574 DUP4 DUP9 PUSH2 0xDF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C6 SWAP1 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5DB DUP3 DUP5 PUSH2 0x9FB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP3 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDF273CB619D95419A9CD0EC88123A0538C85064229BAA6363788F743FFF90DEB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x759 SWAP3 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x48B2EF2F7EFB11FEF3B83A2E524D39E3D9366A7CD9A756981F750E5AB527DB4 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x81C DUP4 DUP4 PUSH2 0x3D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x93C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x950 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x99C SWAP3 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x72D229D9B6FBFEC38D163EA1310B2549D831F540E79B7194A93FE94B84378987 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA36 SWAP1 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP3 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP PUSH2 0xBA5 DUP2 PUSH2 0xB97 DUP5 DUP9 PUSH2 0xDF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBCC PUSH2 0xD25 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBEA PUSH2 0x3AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA6 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB8 DUP2 PUSH2 0xD2D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xDFF SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE15 SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE66 DUP2 PUSH2 0xE31 JUMP JUMPDEST DUP2 EQ PUSH2 0xE71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE83 DUP2 PUSH2 0xE5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9F JUMPI PUSH2 0xE9E PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEAD DUP5 DUP3 DUP6 ADD PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECB DUP2 PUSH2 0xEB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF31 PUSH2 0xF2C PUSH2 0xF27 DUP5 PUSH2 0xEEC JUMP JUMPDEST PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xEEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF43 DUP3 PUSH2 0xF16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF55 DUP3 PUSH2 0xF38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF65 DUP2 PUSH2 0xF4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF91 DUP3 PUSH2 0xF38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA1 DUP2 PUSH2 0xF86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFBC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCD DUP3 PUSH2 0xEEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFDD DUP2 PUSH2 0xFC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0xFFE JUMP JUMPDEST DUP2 EQ PUSH2 0x101C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x102E DUP2 PUSH2 0x1008 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104A PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1059 DUP6 DUP3 DUP7 ADD PUSH2 0x101F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x106A DUP6 DUP3 DUP7 ADD PUSH2 0x101F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x107D DUP2 PUSH2 0xFFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1098 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A7 DUP2 PUSH2 0xFC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10C4 DUP2 PUSH2 0x109E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1118 DUP3 PUSH2 0x10CF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1137 JUMPI PUSH2 0x1136 PUSH2 0x10E0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114A PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP PUSH2 0x1156 DUP3 DUP3 PUSH2 0x110F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1176 JUMPI PUSH2 0x1175 PUSH2 0x10E0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x119F PUSH2 0x119A DUP5 PUSH2 0x115B JUMP JUMPDEST PUSH2 0x1140 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x11C2 JUMPI PUSH2 0x11C1 PUSH2 0x1187 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11EB JUMPI DUP1 PUSH2 0x11D7 DUP9 DUP3 PUSH2 0x101F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11C4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x120A JUMPI PUSH2 0x1209 PUSH2 0x10CA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x121A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x118C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x10E0 JUMP JUMPDEST JUMPDEST PUSH2 0x124C DUP3 PUSH2 0x10CF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127B PUSH2 0x1276 DUP5 PUSH2 0x1228 JUMP JUMPDEST PUSH2 0x1140 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1297 JUMPI PUSH2 0x1296 PUSH2 0x1223 JUMP JUMPDEST JUMPDEST PUSH2 0x12A2 DUP5 DUP3 DUP6 PUSH2 0x1259 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12BF JUMPI PUSH2 0x12BE PUSH2 0x10CA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12CF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1268 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12F4 JUMPI PUSH2 0x12F3 PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1302 DUP9 DUP3 DUP10 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1313 DUP9 DUP3 DUP10 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0xE2C JUMP JUMPDEST JUMPDEST PUSH2 0x1340 DUP9 DUP3 DUP10 ADD PUSH2 0x11F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1361 JUMPI PUSH2 0x1360 PUSH2 0xE2C JUMP JUMPDEST JUMPDEST PUSH2 0x136D DUP9 DUP3 DUP10 ADD PUSH2 0x11F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x138E JUMPI PUSH2 0x138D PUSH2 0xE2C JUMP JUMPDEST JUMPDEST PUSH2 0x139A DUP9 DUP3 DUP10 ADD PUSH2 0x12AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x13B0 DUP2 PUSH2 0xE31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13EC PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FB DUP9 DUP3 DUP10 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x140C DUP9 DUP3 DUP10 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x141D DUP9 DUP3 DUP10 ADD PUSH2 0x101F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x142E DUP9 DUP3 DUP10 ADD PUSH2 0x101F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x144F JUMPI PUSH2 0x144E PUSH2 0xE2C JUMP JUMPDEST JUMPDEST PUSH2 0x145B DUP9 DUP3 DUP10 ADD PUSH2 0x12AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147E JUMPI PUSH2 0x147D PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148C DUP5 DUP3 DUP6 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DC PUSH1 0x20 DUP4 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E7 DUP3 PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x150B DUP2 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420455243323020616D6F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1548 PUSH1 0x14 DUP4 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH2 0x1553 DUP3 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1577 DUP2 PUSH2 0x153B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x158D DUP2 PUSH2 0x1008 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A9 JUMPI PUSH2 0x15A8 PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15B7 DUP5 DUP3 DUP6 ADD PUSH2 0x157E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15D5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x15E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964204552433131353520616D6F756E7400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161F PUSH1 0x16 DUP4 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH2 0x162A DUP3 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x164E DUP2 PUSH2 0x1612 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1676 PUSH1 0x0 DUP4 PUSH2 0x1655 JUMP JUMPDEST SWAP2 POP PUSH2 0x1681 DUP3 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x16A1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x16AE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x16BB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x16C8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x16D9 DUP2 PUSH2 0x1669 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16ED DUP2 PUSH2 0xEB6 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x170A DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1734 DUP5 DUP3 DUP6 ADD PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1752 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x175F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x177B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x1788 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x1795 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x17BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x17CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1830 PUSH1 0x26 DUP4 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH2 0x183B DUP3 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x185F DUP2 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18A0 DUP3 PUSH2 0xFFE JUMP JUMPDEST SWAP2 POP PUSH2 0x18AB DUP4 PUSH2 0xFFE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18B9 DUP2 PUSH2 0xFFE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18D0 JUMPI PUSH2 0x18CF PUSH2 0x1866 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1911 DUP3 PUSH2 0xFFE JUMP JUMPDEST SWAP2 POP PUSH2 0x191C DUP4 PUSH2 0xFFE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x192C JUMPI PUSH2 0x192B PUSH2 0x18D7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 CALLCODE 0xD5 SWAP12 0xE3 JUMPI SWAP4 DUP1 0xB1 PUSH14 0x6BB5AC5C6805206194ED654C7091 CODECOPY 0xBF DUP6 PUSH11 0x4225C4664736F6C634300 ADDMOD SGT STOP CALLER ",
          "sourceMap": "439:2853:10:-:0;;;1093:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1184:13:10;1160:12;;:38;;;;;;;;;;;;;;;;;;1229:11;1209:10;;:32;;;;;;;;;;;;;;;;;;1093:156;;439:2853;;640:96:6;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;439:2853:10:-;;;;;;;"
        },
        "deployedBytecode": {
          "functionDebugData": {
            "@_msgSender_442": {
              "entryPoint": 3365,
              "id": 442,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_transferOwnership_103": {
              "entryPoint": 3373,
              "id": 103,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@div_709": {
              "entryPoint": 3591,
              "id": 709,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@erc1155Token_820": {
              "entryPoint": 731,
              "id": 820,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@erc20Token_823": {
              "entryPoint": 905,
              "id": 823,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@getQuoteERC1155ToERC20_1101": {
              "entryPoint": 2555,
              "id": 1101,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@getQuoteERC20ToERC1155_1051": {
              "entryPoint": 984,
              "id": 1051,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@mul_694": {
              "entryPoint": 3569,
              "id": 694,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@onERC1155BatchReceived_317": {
              "entryPoint": 1976,
              "id": 317,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "@onERC1155Received_294": {
              "entryPoint": 2991,
              "id": 294,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "@owner_32": {
              "entryPoint": 943,
              "id": 32,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@renounceOwnership_60": {
              "entryPoint": 769,
              "id": 60,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@supportsInterface_351": {
              "entryPoint": 609,
              "id": 351,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@supportsInterface_475": {
              "entryPoint": 3259,
              "id": 475,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@swapERC1155ForERC20_1001": {
              "entryPoint": 1420,
              "id": 1001,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@swapERC20ForERC1155_942": {
              "entryPoint": 1997,
              "id": 942,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@transferOwnership_83": {
              "entryPoint": 3012,
              "id": 83,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 4492,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_decode_available_length_t_bytes_memory_ptr": {
              "entryPoint": 4712,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_decode_t_address": {
              "entryPoint": 4277,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 4597,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bool_fromMemory": {
              "entryPoint": 5883,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bytes4": {
              "entryPoint": 3700,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_bytes_memory_ptr": {
              "entryPoint": 4778,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_uint256": {
              "entryPoint": 4127,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_t_uint256_fromMemory": {
              "entryPoint": 5502,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_address": {
              "entryPoint": 5224,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
              "entryPoint": 4824,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 5
            },
            "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
              "entryPoint": 5073,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 5
            },
            "abi_decode_tuple_t_bool_fromMemory": {
              "entryPoint": 5904,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_bytes4": {
              "entryPoint": 3721,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_uint256_fromMemory": {
              "entryPoint": 5523,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_uint256t_uint256": {
              "entryPoint": 4148,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_encode_t_address_to_t_address_fromStack": {
              "entryPoint": 4052,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_bool_to_t_bool_fromStack": {
              "entryPoint": 3778,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_bytes4_to_t_bytes4_fromStack": {
              "entryPoint": 5031,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_contract$_IERC1155_$226_to_t_address_fromStack": {
              "entryPoint": 3932,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_contract$_IERC20_$430_to_t_address_fromStack": {
              "entryPoint": 3992,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_t_stringliteral_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 5650,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 5435,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 6179,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
              "entryPoint": 5327,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
              "entryPoint": 5737,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_t_uint256_to_t_uint256_fromStack": {
              "entryPoint": 4212,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
              "entryPoint": 4067,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
              "entryPoint": 6045,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
              "entryPoint": 5772,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
              "entryPoint": 5568,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
              "entryPoint": 3793,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
              "entryPoint": 5046,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_contract$_IERC1155_$226__to_t_address__fromStack_reversed": {
              "entryPoint": 3947,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_contract$_IERC20_$430__to_t_address__fromStack_reversed": {
              "entryPoint": 4007,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 5685,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 5470,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 6214,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 5362,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
              "entryPoint": 4227,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
              "entryPoint": 5949,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
              "entryPoint": 5990,
              "id": null,
              "parameterSlots": 4,
              "returnSlots": 1
            },
            "allocate_memory": {
              "entryPoint": 4416,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "allocate_unbounded": {
              "entryPoint": 3613,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
              "entryPoint": 4443,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_allocation_size_t_bytes_memory_ptr": {
              "entryPoint": 4648,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
              "entryPoint": 5717,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
              "entryPoint": 5269,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_div_t_uint256": {
              "entryPoint": 6406,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_mul_t_uint256": {
              "entryPoint": 6293,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "cleanup_t_address": {
              "entryPoint": 4034,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_bool": {
              "entryPoint": 3766,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_bytes4": {
              "entryPoint": 3633,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint160": {
              "entryPoint": 3820,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "cleanup_t_uint256": {
              "entryPoint": 4094,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "convert_t_contract$_IERC1155_$226_to_t_address": {
              "entryPoint": 3914,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "convert_t_contract$_IERC20_$430_to_t_address": {
              "entryPoint": 3974,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "convert_t_uint160_to_t_address": {
              "entryPoint": 3896,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "convert_t_uint160_to_t_uint160": {
              "entryPoint": 3862,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "copy_calldata_to_memory_with_cleanup": {
              "entryPoint": 4697,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "finalize_allocation": {
              "entryPoint": 4367,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "identity": {
              "entryPoint": 3852,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "panic_error_0x11": {
              "entryPoint": 6246,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x12": {
              "entryPoint": 6359,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x41": {
              "entryPoint": 4320,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
              "entryPoint": 4298,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
              "entryPoint": 4487,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
              "entryPoint": 4643,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
              "entryPoint": 3628,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
              "entryPoint": 3623,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "round_up_to_mul_of_32": {
              "entryPoint": 4303,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "store_literal_in_memory_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134": {
              "entryPoint": 5609,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206": {
              "entryPoint": 5394,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
              "entryPoint": 6100,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
              "entryPoint": 5286,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
              "entryPoint": 5734,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_address": {
              "entryPoint": 4254,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_bool": {
              "entryPoint": 5860,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_bytes4": {
              "entryPoint": 3677,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "validator_revert_t_uint256": {
              "entryPoint": 4104,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:21457:11",
                "statements": [
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "47:35:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "57:19:11",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "73:2:11",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "67:5:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "67:9:11"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "57:6:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "allocate_unbounded",
                    "nodeType": "YulFunctionDefinition",
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "40:6:11",
                        "type": ""
                      }
                    ],
                    "src": "7:75:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "177:28:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "194:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "197:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "187:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "187:12:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "187:12:11"
                        }
                      ]
                    },
                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                    "nodeType": "YulFunctionDefinition",
                    "src": "88:117:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "300:28:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "317:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "320:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "310:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "310:12:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "310:12:11"
                        }
                      ]
                    },
                    "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                    "nodeType": "YulFunctionDefinition",
                    "src": "211:117:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "378:105:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "388:89:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "403:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "410:66:11",
                                "type": "",
                                "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "399:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "399:78:11"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "388:7:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "360:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "370:7:11",
                        "type": ""
                      }
                    ],
                    "src": "334:149:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "531:78:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "587:16:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "596:1:11",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "599:1:11",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "589:6:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "589:12:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "589:12:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "554:5:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "578:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bytes4",
                                      "nodeType": "YulIdentifier",
                                      "src": "561:16:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "561:23:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "551:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "551:34:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "544:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "544:42:11"
                          },
                          "nodeType": "YulIf",
                          "src": "541:62:11"
                        }
                      ]
                    },
                    "name": "validator_revert_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "524:5:11",
                        "type": ""
                      }
                    ],
                    "src": "489:120:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "666:86:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "676:29:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "698:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "685:12:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "685:20:11"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "676:5:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "740:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "714:25:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "714:32:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "714:32:11"
                        }
                      ]
                    },
                    "name": "abi_decode_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "644:6:11",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "652:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "660:5:11",
                        "type": ""
                      }
                    ],
                    "src": "615:137:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "823:262:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "869:83:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "871:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "871:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "871:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "844:7:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "853:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "840:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "840:23:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "865:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "836:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "836:32:11"
                          },
                          "nodeType": "YulIf",
                          "src": "833:119:11"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "962:116:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "977:15:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "991:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "981:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1006:62:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1040:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1051:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1036:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1036:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1060:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bytes4",
                                  "nodeType": "YulIdentifier",
                                  "src": "1016:19:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1016:52:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1006:6:11"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bytes4",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "793:9:11",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "804:7:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "816:6:11",
                        "type": ""
                      }
                    ],
                    "src": "758:327:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1133:48:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1143:32:11",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1168:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1161:6:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1161:13:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1154:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1154:21:11"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "1143:7:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1115:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "1125:7:11",
                        "type": ""
                      }
                    ],
                    "src": "1091:90:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1246:50:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "1263:3:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1283:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "1268:14:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1268:21:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1256:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1256:34:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1256:34:11"
                        }
                      ]
                    },
                    "name": "abi_encode_t_bool_to_t_bool_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1234:5:11",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "1241:3:11",
                        "type": ""
                      }
                    ],
                    "src": "1187:109:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1394:118:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1404:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1416:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1427:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1412:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1412:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1404:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1478:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1491:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1502:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1487:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1487:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_bool_to_t_bool_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "1440:37:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1440:65:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1440:65:11"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1366:9:11",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1378:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "1389:4:11",
                        "type": ""
                      }
                    ],
                    "src": "1302:210:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1563:81:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1573:65:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1588:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1595:42:11",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1584:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1584:54:11"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "1573:7:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint160",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1545:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "1555:7:11",
                        "type": ""
                      }
                    ],
                    "src": "1518:126:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1682:28:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1692:12:11",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1699:5:11"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "1692:3:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "identity",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1668:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "1678:3:11",
                        "type": ""
                      }
                    ],
                    "src": "1650:60:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1776:82:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1786:66:11",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "1844:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint160",
                                      "nodeType": "YulIdentifier",
                                      "src": "1826:17:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1826:24:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "identity",
                                  "nodeType": "YulIdentifier",
                                  "src": "1817:8:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1817:34:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1799:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1799:53:11"
                          },
                          "variableNames": [
                            {
                              "name": "converted",
                              "nodeType": "YulIdentifier",
                              "src": "1786:9:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "convert_t_uint160_to_t_uint160",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1756:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "converted",
                        "nodeType": "YulTypedName",
                        "src": "1766:9:11",
                        "type": ""
                      }
                    ],
                    "src": "1716:142:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1924:66:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1934:50:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1978:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_uint160_to_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "1947:30:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1947:37:11"
                          },
                          "variableNames": [
                            {
                              "name": "converted",
                              "nodeType": "YulIdentifier",
                              "src": "1934:9:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "convert_t_uint160_to_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "1904:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "converted",
                        "nodeType": "YulTypedName",
                        "src": "1914:9:11",
                        "type": ""
                      }
                    ],
                    "src": "1864:126:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2072:66:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2082:50:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2126:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_uint160_to_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2095:30:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2095:37:11"
                          },
                          "variableNames": [
                            {
                              "name": "converted",
                              "nodeType": "YulIdentifier",
                              "src": "2082:9:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "convert_t_contract$_IERC1155_$226_to_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2052:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "converted",
                        "nodeType": "YulTypedName",
                        "src": "2062:9:11",
                        "type": ""
                      }
                    ],
                    "src": "1996:142:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2225:82:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2242:3:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2294:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IERC1155_$226_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2247:46:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2247:53:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "2235:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2235:66:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2235:66:11"
                        }
                      ]
                    },
                    "name": "abi_encode_t_contract$_IERC1155_$226_to_t_address_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2213:5:11",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "2220:3:11",
                        "type": ""
                      }
                    ],
                    "src": "2144:163:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2427:140:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2437:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2449:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2460:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2445:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2445:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2437:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2533:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2546:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2557:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2542:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2542:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_contract$_IERC1155_$226_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "2473:59:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2473:87:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2473:87:11"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_contract$_IERC1155_$226__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2399:9:11",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2411:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "2422:4:11",
                        "type": ""
                      }
                    ],
                    "src": "2313:254:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2647:66:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2657:50:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2701:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "convert_t_uint160_to_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2670:30:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2670:37:11"
                          },
                          "variableNames": [
                            {
                              "name": "converted",
                              "nodeType": "YulIdentifier",
                              "src": "2657:9:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "convert_t_contract$_IERC20_$430_to_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2627:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "converted",
                        "nodeType": "YulTypedName",
                        "src": "2637:9:11",
                        "type": ""
                      }
                    ],
                    "src": "2573:140:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2798:80:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2815:3:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2865:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IERC20_$430_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2820:44:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2820:51:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "2808:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2808:64:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2808:64:11"
                        }
                      ]
                    },
                    "name": "abi_encode_t_contract$_IERC20_$430_to_t_address_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "2786:5:11",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "2793:3:11",
                        "type": ""
                      }
                    ],
                    "src": "2719:159:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2996:138:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3006:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3018:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3029:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3014:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3014:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3006:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3100:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3113:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3124:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3109:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3109:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_contract$_IERC20_$430_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "3042:57:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3042:85:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3042:85:11"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_contract$_IERC20_$430__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2968:9:11",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2980:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "2991:4:11",
                        "type": ""
                      }
                    ],
                    "src": "2884:250:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3185:51:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3195:35:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3224:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "3206:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3206:24:11"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "3195:7:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3167:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "3177:7:11",
                        "type": ""
                      }
                    ],
                    "src": "3140:96:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3307:53:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3324:3:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3347:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3329:17:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3329:24:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3317:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3317:37:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3317:37:11"
                        }
                      ]
                    },
                    "name": "abi_encode_t_address_to_t_address_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3295:5:11",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "3302:3:11",
                        "type": ""
                      }
                    ],
                    "src": "3242:118:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3464:124:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3474:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3486:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3497:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3482:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3482:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3474:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3554:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3567:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3578:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3563:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3563:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "3510:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3510:71:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3510:71:11"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3436:9:11",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3448:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "3459:4:11",
                        "type": ""
                      }
                    ],
                    "src": "3366:222:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3639:32:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3649:16:11",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3660:5:11"
                          },
                          "variableNames": [
                            {
                              "name": "cleaned",
                              "nodeType": "YulIdentifier",
                              "src": "3649:7:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "cleanup_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3621:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "cleaned",
                        "nodeType": "YulTypedName",
                        "src": "3631:7:11",
                        "type": ""
                      }
                    ],
                    "src": "3594:77:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3720:79:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3777:16:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3786:1:11",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3789:1:11",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3779:6:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3779:12:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3779:12:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3743:5:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3768:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3750:17:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3750:24:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "3740:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3740:35:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3733:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3733:43:11"
                          },
                          "nodeType": "YulIf",
                          "src": "3730:63:11"
                        }
                      ]
                    },
                    "name": "validator_revert_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3713:5:11",
                        "type": ""
                      }
                    ],
                    "src": "3677:122:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3857:87:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3867:29:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3889:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3876:12:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3876:20:11"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "3867:5:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3932:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "3905:26:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3905:33:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3905:33:11"
                        }
                      ]
                    },
                    "name": "abi_decode_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "3835:6:11",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "3843:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3851:5:11",
                        "type": ""
                      }
                    ],
                    "src": "3805:139:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4033:391:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4079:83:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "4081:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4081:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4081:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4054:7:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4063:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4050:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4050:23:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4075:2:11",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4046:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4046:32:11"
                          },
                          "nodeType": "YulIf",
                          "src": "4043:119:11"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "4172:117:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4187:15:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4201:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4191:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4216:63:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4251:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4262:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4247:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4247:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4271:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "4226:20:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4226:53:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4216:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "4299:118:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4314:16:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4328:2:11",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "4318:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4344:63:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4379:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4390:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4375:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4375:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4399:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "4354:20:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4354:53:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4344:6:11"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3995:9:11",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "4006:7:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4018:6:11",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "4026:6:11",
                        "type": ""
                      }
                    ],
                    "src": "3950:474:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4495:53:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4512:3:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4535:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "4517:17:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4517:24:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4505:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4505:37:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4505:37:11"
                        }
                      ]
                    },
                    "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "4483:5:11",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "4490:3:11",
                        "type": ""
                      }
                    ],
                    "src": "4430:118:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4652:124:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4662:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4674:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4685:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4670:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4670:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "4662:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4742:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4755:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4766:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4751:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4751:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "4698:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4698:71:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4698:71:11"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4624:9:11",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4636:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "4647:4:11",
                        "type": ""
                      }
                    ],
                    "src": "4554:222:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4825:79:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4882:16:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4891:1:11",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4894:1:11",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4884:6:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4884:12:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4884:12:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4848:5:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4873:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "4855:17:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4855:24:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "4845:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4845:35:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4838:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4838:43:11"
                          },
                          "nodeType": "YulIf",
                          "src": "4835:63:11"
                        }
                      ]
                    },
                    "name": "validator_revert_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "4818:5:11",
                        "type": ""
                      }
                    ],
                    "src": "4782:122:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4962:87:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4972:29:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4994:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4981:12:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4981:20:11"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "4972:5:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5037:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "5010:26:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5010:33:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5010:33:11"
                        }
                      ]
                    },
                    "name": "abi_decode_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "4940:6:11",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "4948:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "4956:5:11",
                        "type": ""
                      }
                    ],
                    "src": "4910:139:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5144:28:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5161:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5164:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "5154:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5154:12:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5154:12:11"
                        }
                      ]
                    },
                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                    "nodeType": "YulFunctionDefinition",
                    "src": "5055:117:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5226:54:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5236:38:11",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5254:5:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5261:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5250:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5250:14:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5270:2:11",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5266:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5266:7:11"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5246:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5246:28:11"
                          },
                          "variableNames": [
                            {
                              "name": "result",
                              "nodeType": "YulIdentifier",
                              "src": "5236:6:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "round_up_to_mul_of_32",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "5209:5:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "result",
                        "nodeType": "YulTypedName",
                        "src": "5219:6:11",
                        "type": ""
                      }
                    ],
                    "src": "5178:102:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5314:152:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5331:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5334:77:11",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5324:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5324:88:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5324:88:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5428:1:11",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5431:4:11",
                                "type": "",
                                "value": "0x41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5421:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5421:15:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5421:15:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5452:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5455:4:11",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "5445:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5445:15:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5445:15:11"
                        }
                      ]
                    },
                    "name": "panic_error_0x41",
                    "nodeType": "YulFunctionDefinition",
                    "src": "5286:180:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5515:238:11",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5525:58:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "5547:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "size",
                                    "nodeType": "YulIdentifier",
                                    "src": "5577:4:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "round_up_to_mul_of_32",
                                  "nodeType": "YulIdentifier",
                                  "src": "5555:21:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5555:27:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5543:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5543:40:11"
                          },
                          "variables": [
                            {
                              "name": "newFreePtr",
                              "nodeType": "YulTypedName",
                              "src": "5529:10:11",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "5694:22:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "5696:16:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5696:18:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "5696:18:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5637:10:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5649:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5634:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5634:34:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5673:10:11"
                                  },
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "5685:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5670:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5670:22:11"
                              }
                            ],
                            "functionName": {
                              "name": "or",
                              "nodeType": "YulIdentifier",
                              "src": "5631:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5631:62:11"
                          },
                          "nodeType": "YulIf",
                          "src": "5628:88:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5732:2:11",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "5736:10:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5725:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5725:22:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5725:22:11"
                        }
                      ]
                    },
                    "name": "finalize_allocation",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "5501:6:11",
                        "type": ""
                      },
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "5509:4:11",
                        "type": ""
                      }
                    ],
                    "src": "5472:281:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5800:88:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "5810:30:11",
                          "value": {
                            "arguments": [],
                            "functionName": {
                              "name": "allocate_unbounded",
                              "nodeType": "YulIdentifier",
                              "src": "5820:18:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5820:20:11"
                          },
                          "variableNames": [
                            {
                              "name": "memPtr",
                              "nodeType": "YulIdentifier",
                              "src": "5810:6:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "5869:6:11"
                              },
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "5877:4:11"
                              }
                            ],
                            "functionName": {
                              "name": "finalize_allocation",
                              "nodeType": "YulIdentifier",
                              "src": "5849:19:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5849:33:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5849:33:11"
                        }
                      ]
                    },
                    "name": "allocate_memory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "5784:4:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "5793:6:11",
                        "type": ""
                      }
                    ],
                    "src": "5759:129:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5976:229:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6081:22:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "6083:16:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6083:18:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6083:18:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "6053:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6061:18:11",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "6050:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6050:30:11"
                          },
                          "nodeType": "YulIf",
                          "src": "6047:56:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6113:25:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "6125:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6133:4:11",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "6121:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6121:17:11"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "6113:4:11"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6175:23:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "6187:4:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6193:4:11",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6183:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6183:15:11"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "6175:4:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "5960:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "5971:4:11",
                        "type": ""
                      }
                    ],
                    "src": "5894:311:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6300:28:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6317:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6320:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "6310:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6310:12:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6310:12:11"
                        }
                      ]
                    },
                    "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                    "nodeType": "YulFunctionDefinition",
                    "src": "6211:117:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6453:608:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "6463:90:11",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6545:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "6488:56:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6488:64:11"
                              }
                            ],
                            "functionName": {
                              "name": "allocate_memory",
                              "nodeType": "YulIdentifier",
                              "src": "6472:15:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6472:81:11"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "6463:5:11"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "6562:16:11",
                          "value": {
                            "name": "array",
                            "nodeType": "YulIdentifier",
                            "src": "6573:5:11"
                          },
                          "variables": [
                            {
                              "name": "dst",
                              "nodeType": "YulTypedName",
                              "src": "6566:3:11",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "6595:5:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "6602:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6588:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6588:21:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6588:21:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6618:23:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "6629:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6636:4:11",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6625:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6625:16:11"
                          },
                          "variableNames": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "6618:3:11"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "6651:44:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6669:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6681:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6689:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "6677:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6677:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6665:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6665:30:11"
                          },
                          "variables": [
                            {
                              "name": "srcEnd",
                              "nodeType": "YulTypedName",
                              "src": "6655:6:11",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6723:103:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                                    "nodeType": "YulIdentifier",
                                    "src": "6737:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6737:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6737:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "srcEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6710:6:11"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "6718:3:11"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "6707:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6707:15:11"
                          },
                          "nodeType": "YulIf",
                          "src": "6704:122:11"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6911:144:11",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "6926:21:11",
                                "value": {
                                  "name": "src",
                                  "nodeType": "YulIdentifier",
                                  "src": "6944:3:11"
                                },
                                "variables": [
                                  {
                                    "name": "elementPos",
                                    "nodeType": "YulTypedName",
                                    "src": "6930:10:11",
                                    "type": ""
                                  }
                                ]
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "6968:3:11"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "name": "elementPos",
                                          "nodeType": "YulIdentifier",
                                          "src": "6994:10:11"
                                        },
                                        {
                                          "name": "end",
                                          "nodeType": "YulIdentifier",
                                          "src": "7006:3:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "abi_decode_t_uint256",
                                        "nodeType": "YulIdentifier",
                                        "src": "6973:20:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6973:37:11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "6961:6:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6961:50:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6961:50:11"
                              },
                              {
                                "nodeType": "YulAssignment",
                                "src": "7024:21:11",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "7035:3:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7040:4:11",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7031:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7031:14:11"
                                },
                                "variableNames": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "7024:3:11"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "6864:3:11"
                              },
                              {
                                "name": "srcEnd",
                                "nodeType": "YulIdentifier",
                                "src": "6869:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "6861:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6861:15:11"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "6877:25:11",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "6879:21:11",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "6890:3:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "6895:4:11",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "6886:3:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6886:14:11"
                                },
                                "variableNames": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "6879:3:11"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "6839:21:11",
                            "statements": [
                              {
                                "nodeType": "YulVariableDeclaration",
                                "src": "6841:17:11",
                                "value": {
                                  "name": "offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "6852:6:11"
                                },
                                "variables": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulTypedName",
                                    "src": "6845:3:11",
                                    "type": ""
                                  }
                                ]
                              }
                            ]
                          },
                          "src": "6835:220:11"
                        }
                      ]
                    },
                    "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "6423:6:11",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "6431:6:11",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "6439:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "6447:5:11",
                        "type": ""
                      }
                    ],
                    "src": "6351:710:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7161:293:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7210:83:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                    "nodeType": "YulIdentifier",
                                    "src": "7212:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7212:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7212:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "7189:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7197:4:11",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7185:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7185:17:11"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "7204:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7181:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7181:27:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7174:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7174:35:11"
                          },
                          "nodeType": "YulIf",
                          "src": "7171:122:11"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "7302:34:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7329:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "7316:12:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7316:20:11"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "7306:6:11",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7345:103:11",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7421:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7429:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7417:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7417:17:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7436:6:11"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "7444:3:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "7354:62:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7354:94:11"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "7345:5:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "7139:6:11",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "7147:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "7155:5:11",
                        "type": ""
                      }
                    ],
                    "src": "7084:370:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7549:28:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7566:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7569:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "7559:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7559:12:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7559:12:11"
                        }
                      ]
                    },
                    "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                    "nodeType": "YulFunctionDefinition",
                    "src": "7460:117:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7649:241:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "7754:22:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x41",
                                    "nodeType": "YulIdentifier",
                                    "src": "7756:16:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7756:18:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "7756:18:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7726:6:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7734:18:11",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "7723:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7723:30:11"
                          },
                          "nodeType": "YulIf",
                          "src": "7720:56:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7786:37:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7816:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "round_up_to_mul_of_32",
                              "nodeType": "YulIdentifier",
                              "src": "7794:21:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7794:29:11"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "7786:4:11"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7860:23:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "7872:4:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7878:4:11",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7868:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7868:15:11"
                          },
                          "variableNames": [
                            {
                              "name": "size",
                              "nodeType": "YulIdentifier",
                              "src": "7860:4:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_allocation_size_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "7633:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "size",
                        "nodeType": "YulTypedName",
                        "src": "7644:4:11",
                        "type": ""
                      }
                    ],
                    "src": "7583:307:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7960:82:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "7983:3:11"
                              },
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "7988:3:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "7993:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "calldatacopy",
                              "nodeType": "YulIdentifier",
                              "src": "7970:12:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7970:30:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7970:30:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "8020:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8025:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8016:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8016:16:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8034:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8009:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8009:27:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8009:27:11"
                        }
                      ]
                    },
                    "name": "copy_calldata_to_memory_with_cleanup",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "7942:3:11",
                        "type": ""
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulTypedName",
                        "src": "7947:3:11",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "7952:6:11",
                        "type": ""
                      }
                    ],
                    "src": "7896:146:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8131:340:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "8141:74:11",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8207:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_allocation_size_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "8166:40:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8166:48:11"
                              }
                            ],
                            "functionName": {
                              "name": "allocate_memory",
                              "nodeType": "YulIdentifier",
                              "src": "8150:15:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8150:65:11"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "8141:5:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "8231:5:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8238:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8224:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8224:21:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8224:21:11"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "8254:27:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "8269:5:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8276:4:11",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8265:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8265:16:11"
                          },
                          "variables": [
                            {
                              "name": "dst",
                              "nodeType": "YulTypedName",
                              "src": "8258:3:11",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "8319:83:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                                    "nodeType": "YulIdentifier",
                                    "src": "8321:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8321:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "8321:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "8300:3:11"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8305:6:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8296:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8296:16:11"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "8314:3:11"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "8293:2:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8293:25:11"
                          },
                          "nodeType": "YulIf",
                          "src": "8290:112:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "8448:3:11"
                              },
                              {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "8453:3:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8458:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "copy_calldata_to_memory_with_cleanup",
                              "nodeType": "YulIdentifier",
                              "src": "8411:36:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8411:54:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8411:54:11"
                        }
                      ]
                    },
                    "name": "abi_decode_available_length_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "src",
                        "nodeType": "YulTypedName",
                        "src": "8104:3:11",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "8109:6:11",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "8117:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "8125:5:11",
                        "type": ""
                      }
                    ],
                    "src": "8048:423:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8551:277:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "8600:83:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                                    "nodeType": "YulIdentifier",
                                    "src": "8602:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8602:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "8602:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8579:6:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8587:4:11",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8575:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8575:17:11"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "8594:3:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8571:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8571:27:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8564:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8564:35:11"
                          },
                          "nodeType": "YulIf",
                          "src": "8561:122:11"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "8692:34:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "8719:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "8706:12:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8706:20:11"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "8696:6:11",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8735:87:11",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "8795:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8803:4:11",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8791:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8791:17:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "8810:6:11"
                              },
                              {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "8818:3:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_available_length_t_bytes_memory_ptr",
                              "nodeType": "YulIdentifier",
                              "src": "8744:46:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8744:78:11"
                          },
                          "variableNames": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "8735:5:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "8529:6:11",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "8537:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "array",
                        "nodeType": "YulTypedName",
                        "src": "8545:5:11",
                        "type": ""
                      }
                    ],
                    "src": "8490:338:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9027:1316:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "9074:83:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "9076:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9076:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "9076:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9048:7:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9057:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "9044:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9044:23:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9069:3:11",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "9040:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9040:33:11"
                          },
                          "nodeType": "YulIf",
                          "src": "9037:120:11"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "9167:117:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9182:15:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9196:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "9186:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9211:63:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9246:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9257:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9242:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9242:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9266:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "9221:20:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9221:53:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "9211:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "9294:118:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9309:16:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9323:2:11",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "9313:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9339:63:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9374:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9385:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9370:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9370:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9394:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "9349:20:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9349:53:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "9339:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "9422:303:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9437:46:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9468:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9479:2:11",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9464:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9464:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9451:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9451:32:11"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "9441:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9530:83:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "9532:77:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9532:79:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9532:79:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "9502:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9510:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9499:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9499:30:11"
                              },
                              "nodeType": "YulIf",
                              "src": "9496:117:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9627:88:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9687:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "9698:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9683:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9683:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "9707:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9637:45:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9637:78:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "9627:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "9735:303:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9750:46:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9781:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9792:2:11",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9777:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9777:18:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9764:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9764:32:11"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "9754:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9843:83:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "9845:77:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9845:79:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9845:79:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "9815:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9823:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "9812:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9812:30:11"
                              },
                              "nodeType": "YulIf",
                              "src": "9809:117:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9940:88:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10000:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "10011:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9996:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9996:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "10020:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "9950:45:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9950:78:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "9940:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "10048:288:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10063:47:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10094:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10105:3:11",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10090:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10090:19:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "10077:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10077:33:11"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "10067:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10157:83:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "10159:77:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10159:79:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10159:79:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "10129:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10137:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10126:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10126:30:11"
                              },
                              "nodeType": "YulIf",
                              "src": "10123:117:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10254:72:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10298:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "10309:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10294:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10294:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "10318:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "10264:29:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10264:62:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "10254:6:11"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8965:9:11",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "8976:7:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "8988:6:11",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "8996:6:11",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "9004:6:11",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "9012:6:11",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "9020:6:11",
                        "type": ""
                      }
                    ],
                    "src": "8834:1509:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10412:52:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "10429:3:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "10451:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_bytes4",
                                  "nodeType": "YulIdentifier",
                                  "src": "10434:16:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10434:23:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10422:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10422:36:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10422:36:11"
                        }
                      ]
                    },
                    "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "10400:5:11",
                        "type": ""
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "10407:3:11",
                        "type": ""
                      }
                    ],
                    "src": "10349:115:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10566:122:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "10576:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10588:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10599:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10584:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10584:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10576:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "10654:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10667:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10678:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10663:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10663:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "10612:41:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10612:69:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10612:69:11"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10538:9:11",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "10550:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "10561:4:11",
                        "type": ""
                      }
                    ],
                    "src": "10470:218:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10837:946:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10884:83:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "10886:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10886:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10886:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "10858:7:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10867:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "10854:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10854:23:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10879:3:11",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "10850:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10850:33:11"
                          },
                          "nodeType": "YulIf",
                          "src": "10847:120:11"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "10977:117:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10992:15:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11006:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "10996:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11021:63:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11056:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "11067:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11052:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11052:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "11076:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "11031:20:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11031:53:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "11021:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "11104:118:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11119:16:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11133:2:11",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "11123:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11149:63:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11184:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "11195:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11180:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11180:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "11204:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "11159:20:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11159:53:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "11149:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "11232:118:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11247:16:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11261:2:11",
                                "type": "",
                                "value": "64"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "11251:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11277:63:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11312:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "11323:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11308:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11308:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "11332:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "11287:20:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11287:53:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "11277:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "11360:118:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11375:16:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11389:2:11",
                                "type": "",
                                "value": "96"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "11379:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11405:63:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11440:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "11451:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11436:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11436:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "11460:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "11415:20:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11415:53:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "11405:6:11"
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "11488:288:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11503:47:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11534:9:11"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11545:3:11",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11530:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11530:19:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11517:12:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11517:33:11"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "11507:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11597:83:11",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                        "nodeType": "YulIdentifier",
                                        "src": "11599:77:11"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11599:79:11"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11599:79:11"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "11569:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11577:18:11",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11566:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11566:30:11"
                              },
                              "nodeType": "YulIf",
                              "src": "11563:117:11"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11694:72:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11738:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "11749:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11734:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11734:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "11758:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bytes_memory_ptr",
                                  "nodeType": "YulIdentifier",
                                  "src": "11704:29:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11704:62:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value4",
                                  "nodeType": "YulIdentifier",
                                  "src": "11694:6:11"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10775:9:11",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "10786:7:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "10798:6:11",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "10806:6:11",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "10814:6:11",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "10822:6:11",
                        "type": ""
                      },
                      {
                        "name": "value4",
                        "nodeType": "YulTypedName",
                        "src": "10830:6:11",
                        "type": ""
                      }
                    ],
                    "src": "10694:1089:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11855:263:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "11901:83:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "11903:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "11903:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "11903:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "11876:7:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11885:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "11872:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11872:23:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11897:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "11868:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11868:32:11"
                          },
                          "nodeType": "YulIf",
                          "src": "11865:119:11"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "11994:117:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "12009:15:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12023:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "12013:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12038:63:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12073:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "12084:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12069:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12069:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "12093:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "12048:20:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12048:53:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "12038:6:11"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "11825:9:11",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "11836:7:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "11848:6:11",
                        "type": ""
                      }
                    ],
                    "src": "11789:329:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12220:73:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12237:3:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "12242:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12230:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12230:19:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12230:19:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12258:29:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12277:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12282:4:11",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12273:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12273:14:11"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "12258:11:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "12192:3:11",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "12197:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "12208:11:11",
                        "type": ""
                      }
                    ],
                    "src": "12124:169:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12405:76:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "12427:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12435:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12423:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12423:14:11"
                              },
                              {
                                "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "12439:34:11",
                                "type": "",
                                "value": "Ownable: caller is not the owner"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "12416:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12416:58:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12416:58:11"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "12397:6:11",
                        "type": ""
                      }
                    ],
                    "src": "12299:182:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "12633:220:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "12643:74:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12709:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12714:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "12650:58:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12650:67:11"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "12643:3:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12815:3:11"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                              "nodeType": "YulIdentifier",
                              "src": "12726:88:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12726:93:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "12726:93:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "12828:19:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "12839:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12844:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12835:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12835:12:11"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "12828:3:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "12621:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "12629:3:11",
                        "type": ""
                      }
                    ],
                    "src": "12487:366:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13030:248:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "13040:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13052:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13063:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13048:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13048:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "13040:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13087:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13098:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13083:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13083:17:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13106:4:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13112:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "13102:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13102:20:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13076:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13076:47:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13076:47:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13132:139:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "13266:4:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13140:124:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13140:131:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "13132:4:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "13010:9:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "13025:4:11",
                        "type": ""
                      }
                    ],
                    "src": "12859:419:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13390:64:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "13412:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13420:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13408:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13408:14:11"
                              },
                              {
                                "hexValue": "496e76616c696420455243323020616d6f756e74",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "13424:22:11",
                                "type": "",
                                "value": "Invalid ERC20 amount"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "13401:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13401:46:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13401:46:11"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "13382:6:11",
                        "type": ""
                      }
                    ],
                    "src": "13284:170:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "13606:220:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "13616:74:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13682:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13687:2:11",
                                "type": "",
                                "value": "20"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "13623:58:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13623:67:11"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "13616:3:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13788:3:11"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206",
                              "nodeType": "YulIdentifier",
                              "src": "13699:88:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13699:93:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "13699:93:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "13801:19:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "13812:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13817:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13808:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13808:12:11"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "13801:3:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "13594:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "13602:3:11",
                        "type": ""
                      }
                    ],
                    "src": "13460:366:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14003:248:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "14013:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14025:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14036:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14021:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14021:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14013:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14060:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14071:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14056:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14056:17:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "14079:4:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14085:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "14075:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14075:20:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "14049:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14049:47:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14049:47:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "14105:139:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "14239:4:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "14113:124:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14113:131:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14105:4:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "13983:9:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "13998:4:11",
                        "type": ""
                      }
                    ],
                    "src": "13832:419:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14320:80:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "14330:22:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "14345:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "14339:5:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14339:13:11"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "14330:5:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "14388:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "14361:26:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14361:33:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14361:33:11"
                        }
                      ]
                    },
                    "name": "abi_decode_t_uint256_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "14298:6:11",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "14306:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "14314:5:11",
                        "type": ""
                      }
                    ],
                    "src": "14257:143:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14483:274:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "14529:83:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "14531:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14531:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "14531:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "14504:7:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14513:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "14500:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14500:23:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14525:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "14496:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14496:32:11"
                          },
                          "nodeType": "YulIf",
                          "src": "14493:119:11"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "14622:128:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14637:15:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14651:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "14641:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14666:74:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14712:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "14723:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14708:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14708:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "14732:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_uint256_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "14676:31:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14676:64:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "14666:6:11"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "14453:9:11",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "14464:7:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "14476:6:11",
                        "type": ""
                      }
                    ],
                    "src": "14406:351:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "14889:206:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "14899:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14911:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14922:2:11",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14907:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14907:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "14899:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "14979:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14992:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15003:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14988:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14988:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "14935:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14935:71:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "14935:71:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "15060:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15073:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15084:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15069:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15069:18:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "15016:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15016:72:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15016:72:11"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "14853:9:11",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "14865:6:11",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "14873:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "14884:4:11",
                        "type": ""
                      }
                    ],
                    "src": "14763:332:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15207:66:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "15229:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15237:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15225:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15225:14:11"
                              },
                              {
                                "hexValue": "496e76616c6964204552433131353520616d6f756e74",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "15241:24:11",
                                "type": "",
                                "value": "Invalid ERC1155 amount"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15218:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15218:48:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15218:48:11"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "15199:6:11",
                        "type": ""
                      }
                    ],
                    "src": "15101:172:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15425:220:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "15435:74:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15501:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15506:2:11",
                                "type": "",
                                "value": "22"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "15442:58:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15442:67:11"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "15435:3:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15607:3:11"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134",
                              "nodeType": "YulIdentifier",
                              "src": "15518:88:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15518:93:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15518:93:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "15620:19:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "15631:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15636:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15627:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15627:12:11"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "15620:3:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "15413:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "15421:3:11",
                        "type": ""
                      }
                    ],
                    "src": "15279:366:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "15822:248:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "15832:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "15844:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15855:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "15840:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15840:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "15832:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15879:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15890:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15875:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15875:17:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "15898:4:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15904:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "15894:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15894:20:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "15868:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15868:47:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "15868:47:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "15924:139:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "16058:4:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "15932:124:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15932:131:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "15924:4:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "15802:9:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "15817:4:11",
                        "type": ""
                      }
                    ],
                    "src": "15651:419:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16171:73:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16188:3:11"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "16193:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "16181:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16181:19:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16181:19:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16209:29:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16228:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16233:4:11",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16224:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16224:14:11"
                          },
                          "variableNames": [
                            {
                              "name": "updated_pos",
                              "nodeType": "YulIdentifier",
                              "src": "16209:11:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "16143:3:11",
                        "type": ""
                      },
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "16148:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "updated_pos",
                        "nodeType": "YulTypedName",
                        "src": "16159:11:11",
                        "type": ""
                      }
                    ],
                    "src": "16076:168:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16356:8:11",
                      "statements": []
                    },
                    "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "16348:6:11",
                        "type": ""
                      }
                    ],
                    "src": "16250:114:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "16515:217:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "16525:72:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16590:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16595:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "16532:57:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16532:65:11"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "16525:3:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16695:3:11"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "nodeType": "YulIdentifier",
                              "src": "16606:88:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16606:93:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "16606:93:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "16708:18:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "16719:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16724:1:11",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "16715:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16715:11:11"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "16708:3:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "16503:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "16511:3:11",
                        "type": ""
                      }
                    ],
                    "src": "16370:362:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17020:577:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "17030:27:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "17042:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17053:3:11",
                                "type": "",
                                "value": "160"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "17038:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17038:19:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "17030:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "17111:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17124:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17135:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17120:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17120:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17067:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17067:71:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17067:71:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "17192:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17205:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17216:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17201:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17201:18:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17148:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17148:72:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17148:72:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "17274:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17287:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17298:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17283:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17283:18:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17230:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17230:72:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17230:72:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value3",
                                "nodeType": "YulIdentifier",
                                "src": "17356:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17369:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17380:2:11",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17365:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17365:18:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17312:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17312:72:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17312:72:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17405:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17416:3:11",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17401:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17401:19:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "17426:4:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17432:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "17422:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17422:20:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "17394:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17394:49:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17394:49:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "17452:138:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "17585:4:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "17460:123:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17460:130:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "17452:4:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "16968:9:11",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "16980:6:11",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "16988:6:11",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "16996:6:11",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "17004:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "17015:4:11",
                        "type": ""
                      }
                    ],
                    "src": "16738:859:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17643:76:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "17697:16:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "17706:1:11",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "17709:1:11",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "17699:6:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17699:12:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "17699:12:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "17666:5:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "17688:5:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_bool",
                                      "nodeType": "YulIdentifier",
                                      "src": "17673:14:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17673:21:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "17663:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17663:32:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "17656:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17656:40:11"
                          },
                          "nodeType": "YulIf",
                          "src": "17653:60:11"
                        }
                      ]
                    },
                    "name": "validator_revert_t_bool",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "17636:5:11",
                        "type": ""
                      }
                    ],
                    "src": "17603:116:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17785:77:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "17795:22:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "17810:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "17804:5:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17804:13:11"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "17795:5:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "17850:5:11"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "17826:23:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17826:30:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "17826:30:11"
                        }
                      ]
                    },
                    "name": "abi_decode_t_bool_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "17763:6:11",
                        "type": ""
                      },
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "17771:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "17779:5:11",
                        "type": ""
                      }
                    ],
                    "src": "17725:137:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "17942:271:11",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "17988:83:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                                    "nodeType": "YulIdentifier",
                                    "src": "17990:77:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "17990:79:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "17990:79:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "17963:7:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17972:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "17959:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17959:23:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17984:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "17955:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "17955:32:11"
                          },
                          "nodeType": "YulIf",
                          "src": "17952:119:11"
                        },
                        {
                          "nodeType": "YulBlock",
                          "src": "18081:125:11",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "18096:15:11",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18110:1:11",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "18100:6:11",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18125:71:11",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18168:9:11"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "18179:6:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18164:3:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18164:22:11"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "18188:7:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_t_bool_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "18135:28:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18135:61:11"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "18125:6:11"
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_bool_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "17912:9:11",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "17923:7:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "17935:6:11",
                        "type": ""
                      }
                    ],
                    "src": "17868:345:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18345:206:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "18355:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18367:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18378:2:11",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18363:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18363:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18355:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18435:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18448:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18459:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18444:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18444:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18391:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18391:71:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18391:71:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "18516:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18529:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18540:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18525:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18525:18:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18472:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18472:72:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18472:72:11"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "18309:9:11",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "18321:6:11",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "18329:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "18340:4:11",
                        "type": ""
                      }
                    ],
                    "src": "18219:332:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "18711:288:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "18721:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "18733:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "18744:2:11",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "18729:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18729:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "18721:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "18801:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18814:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18825:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18810:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18810:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18757:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18757:71:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18757:71:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "18882:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18895:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18906:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18891:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18891:18:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18838:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18838:72:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18838:72:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "18964:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18977:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18988:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18973:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18973:18:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "18920:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "18920:72:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "18920:72:11"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "18667:9:11",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "18679:6:11",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "18687:6:11",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "18695:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "18706:4:11",
                        "type": ""
                      }
                    ],
                    "src": "18557:442:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19159:288:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "19169:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "19181:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19192:2:11",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "19177:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19177:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "19169:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "19249:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19262:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19273:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19258:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19258:17:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19205:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19205:71:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19205:71:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "19330:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19343:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19354:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19339:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19339:18:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_address_to_t_address_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19286:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19286:72:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19286:72:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value2",
                                "nodeType": "YulIdentifier",
                                "src": "19412:6:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19425:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19436:2:11",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19421:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19421:18:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19368:43:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19368:72:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19368:72:11"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "19115:9:11",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "19127:6:11",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "19135:6:11",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "19143:6:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "19154:4:11",
                        "type": ""
                      }
                    ],
                    "src": "19005:442:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19559:119:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "19581:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19589:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19577:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19577:14:11"
                              },
                              {
                                "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "19593:34:11",
                                "type": "",
                                "value": "Ownable: new owner is the zero a"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "19570:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19570:58:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19570:58:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "19649:6:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19657:2:11",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19645:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19645:15:11"
                              },
                              {
                                "hexValue": "646472657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "19662:8:11",
                                "type": "",
                                "value": "ddress"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "19638:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19638:33:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19638:33:11"
                        }
                      ]
                    },
                    "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulTypedName",
                        "src": "19551:6:11",
                        "type": ""
                      }
                    ],
                    "src": "19453:225:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "19830:220:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "19840:74:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "19906:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19911:2:11",
                                "type": "",
                                "value": "38"
                              }
                            ],
                            "functionName": {
                              "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "19847:58:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19847:67:11"
                          },
                          "variableNames": [
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "19840:3:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20012:3:11"
                              }
                            ],
                            "functionName": {
                              "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                              "nodeType": "YulIdentifier",
                              "src": "19923:88:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "19923:93:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "19923:93:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20025:19:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "20036:3:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20041:2:11",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20032:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20032:12:11"
                          },
                          "variableNames": [
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "20025:3:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "pos",
                        "nodeType": "YulTypedName",
                        "src": "19818:3:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "end",
                        "nodeType": "YulTypedName",
                        "src": "19826:3:11",
                        "type": ""
                      }
                    ],
                    "src": "19684:366:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20227:248:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "20237:26:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "20249:9:11"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20260:2:11",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "20245:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20245:18:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "20237:4:11"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20284:9:11"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20295:1:11",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20280:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20280:17:11"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "20303:4:11"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20309:9:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "20299:3:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20299:20:11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20273:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20273:47:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20273:47:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20329:139:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "20463:4:11"
                              }
                            ],
                            "functionName": {
                              "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                              "nodeType": "YulIdentifier",
                              "src": "20337:124:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20337:131:11"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "20329:4:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "20207:9:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "20222:4:11",
                        "type": ""
                      }
                    ],
                    "src": "20056:419:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20509:152:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20526:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20529:77:11",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20519:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20519:88:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20519:88:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20623:1:11",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20626:4:11",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "20616:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20616:15:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20616:15:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20647:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "20650:4:11",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "20640:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20640:15:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "20640:15:11"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nodeType": "YulFunctionDefinition",
                    "src": "20481:180:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "20715:362:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "20725:25:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20748:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "20730:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20730:20:11"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "20725:1:11"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20759:25:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "20782:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "20764:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20764:20:11"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "20759:1:11"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "20793:28:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "20816:1:11"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "20819:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "20812:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20812:9:11"
                          },
                          "variables": [
                            {
                              "name": "product_raw",
                              "nodeType": "YulTypedName",
                              "src": "20797:11:11",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "20830:41:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "product_raw",
                                "nodeType": "YulIdentifier",
                                "src": "20859:11:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "20841:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20841:30:11"
                          },
                          "variableNames": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "20830:7:11"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21048:22:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "21050:16:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21050:18:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21050:18:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "20981:1:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "20974:6:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20974:9:11"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "21004:1:11"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "product",
                                            "nodeType": "YulIdentifier",
                                            "src": "21011:7:11"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "21020:1:11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "21007:3:11"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "21007:15:11"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "21001:2:11"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21001:22:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "20954:2:11"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20954:83:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "20934:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "20934:113:11"
                          },
                          "nodeType": "YulIf",
                          "src": "20931:139:11"
                        }
                      ]
                    },
                    "name": "checked_mul_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "20698:1:11",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "20701:1:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "product",
                        "nodeType": "YulTypedName",
                        "src": "20707:7:11",
                        "type": ""
                      }
                    ],
                    "src": "20667:410:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21111:152:11",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21128:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21131:77:11",
                                "type": "",
                                "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "21121:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21121:88:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21121:88:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21225:1:11",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21228:4:11",
                                "type": "",
                                "value": "0x12"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "21218:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21218:15:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21218:15:11"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21249:1:11",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "21252:4:11",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "21242:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21242:15:11"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "21242:15:11"
                        }
                      ]
                    },
                    "name": "panic_error_0x12",
                    "nodeType": "YulFunctionDefinition",
                    "src": "21083:180:11"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "21311:143:11",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "21321:25:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21344:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "21326:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21326:20:11"
                          },
                          "variableNames": [
                            {
                              "name": "x",
                              "nodeType": "YulIdentifier",
                              "src": "21321:1:11"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "21355:25:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "21378:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "21360:17:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21360:20:11"
                          },
                          "variableNames": [
                            {
                              "name": "y",
                              "nodeType": "YulIdentifier",
                              "src": "21355:1:11"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "21402:22:11",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x12",
                                    "nodeType": "YulIdentifier",
                                    "src": "21404:16:11"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "21404:18:11"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "21404:18:11"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "21399:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "21392:6:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21392:9:11"
                          },
                          "nodeType": "YulIf",
                          "src": "21389:35:11"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "21434:14:11",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "21443:1:11"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "21446:1:11"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "21439:3:11"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "21439:9:11"
                          },
                          "variableNames": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "21434:1:11"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_div_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "21300:1:11",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "21303:1:11",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "r",
                        "nodeType": "YulTypedName",
                        "src": "21309:1:11",
                        "type": ""
                      }
                    ],
                    "src": "21269:185:11"
                  }
                ]
              },
              "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC1155_$226_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC1155_$226_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC1155_$226_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC1155_$226__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC1155_$226_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_IERC20_$430_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$430_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$430_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$430__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$430_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid ERC20 amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0819ed91f723a6f4fbc68c0abc58192c4dda348147cd961cad20d6773aa0e206_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid ERC1155 amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_00be80f9ace8102b899444134f35d6273e43f67025f86ce3144d106f152cb134_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n}\n",
              "id": 11,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "immutableReferences": {},
          "linkReferences": {},
          "object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bc124c5811610071578063bc124c581461017d578063bc197c8114610199578063c215a97c146101c9578063d7695990146101e5578063f23a6e6114610215578063f2fde38b14610245576100b4565b806301ffc9a7146100b957806321f42268146100e9578063715018a6146101075780638a13eea7146101115780638da5cb5b1461012f57806393068df21461014d575b600080fd5b6100d360048036038101906100ce9190610e89565b610261565b6040516100e09190610ed1565b60405180910390f35b6100f16102db565b6040516100fe9190610f6b565b60405180910390f35b61010f610301565b005b610119610389565b6040516101269190610fa7565b60405180910390f35b6101376103af565b6040516101449190610fe3565b60405180910390f35b61016760048036038101906101629190611034565b6103d8565b6040516101749190611083565b60405180910390f35b61019760048036038101906101929190611034565b61058c565b005b6101b360048036038101906101ae91906112d8565b6107b8565b6040516101c091906113b6565b60405180910390f35b6101e360048036038101906101de9190611034565b6107cd565b005b6101ff60048036038101906101fa9190611034565b6109fb565b60405161020c9190611083565b60405180910390f35b61022f600480360381019061022a91906113d1565b610baf565b60405161023c91906113b6565b60405180910390f35b61025f600480360381019061025a9190611468565b610bc4565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102d457506102d382610cbb565b5b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610309610d25565b73ffffffffffffffffffffffffffffffffffffffff166103276103af565b73ffffffffffffffffffffffffffffffffffffffff161461037d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610374906114f2565b60405180910390fd5b6103876000610d2d565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080831161041c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104139061155e565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104799190610fe3565b602060405180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190611593565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30866040518363ffffffff1660e01b815260040161051a9291906115c0565b602060405180830381865afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190611593565b9050610582826105748388610df190919063ffffffff16565b610e0790919063ffffffff16565b9250505092915050565b600081116105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c690611635565b60405180910390fd5b60006105db82846109fb565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333086866040518563ffffffff1660e01b815260040161063e949392919061168c565b600060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106cd9291906115c0565b6020604051808303816000875af11580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107109190611710565b503373ffffffffffffffffffffffffffffffffffffffff167fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb848460405161075992919061173d565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f048b2ef2f7efb11fef3b83a2e524d39e3d9366a7cd9a756981f750e5ab527db48484846040516107ab93929190611766565b60405180910390a2505050565b600063bc197c8160e01b905095945050505050565b60008211610810576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108079061155e565b60405180910390fd5b600061081c83836103d8565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161087d9392919061179d565b6020604051808303816000875af115801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c09190611710565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333085856040518563ffffffff1660e01b8152600401610922949392919061168c565b600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15838360405161099c92919061173d565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f72d229d9b6fbfec38d163ea1310b2549d831f540e79b7194a93fe94b843789878484846040516109ee93929190611766565b60405180910390a2505050565b6000808311610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3690611635565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a9c9190610fe3565b602060405180830381865afa158015610ab9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610add9190611593565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30866040518363ffffffff1660e01b8152600401610b3d9291906115c0565b602060405180830381865afa158015610b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7e9190611593565b9050610ba581610b978488610df190919063ffffffff16565b610e0790919063ffffffff16565b9250505092915050565b600063f23a6e6160e01b905095945050505050565b610bcc610d25565b73ffffffffffffffffffffffffffffffffffffffff16610bea6103af565b73ffffffffffffffffffffffffffffffffffffffff1614610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c37906114f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610caf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca690611846565b60405180910390fd5b610cb881610d2d565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610dff9190611895565b905092915050565b60008183610e159190611906565b905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e6681610e31565b8114610e7157600080fd5b50565b600081359050610e8381610e5d565b92915050565b600060208284031215610e9f57610e9e610e27565b5b6000610ead84828501610e74565b91505092915050565b60008115159050919050565b610ecb81610eb6565b82525050565b6000602082019050610ee66000830184610ec2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f31610f2c610f2784610eec565b610f0c565b610eec565b9050919050565b6000610f4382610f16565b9050919050565b6000610f5582610f38565b9050919050565b610f6581610f4a565b82525050565b6000602082019050610f806000830184610f5c565b92915050565b6000610f9182610f38565b9050919050565b610fa181610f86565b82525050565b6000602082019050610fbc6000830184610f98565b92915050565b6000610fcd82610eec565b9050919050565b610fdd81610fc2565b82525050565b6000602082019050610ff86000830184610fd4565b92915050565b6000819050919050565b61101181610ffe565b811461101c57600080fd5b50565b60008135905061102e81611008565b92915050565b6000806040838503121561104b5761104a610e27565b5b60006110598582860161101f565b925050602061106a8582860161101f565b9150509250929050565b61107d81610ffe565b82525050565b60006020820190506110986000830184611074565b92915050565b6110a781610fc2565b81146110b257600080fd5b50565b6000813590506110c48161109e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611118826110cf565b810181811067ffffffffffffffff82111715611137576111366110e0565b5b80604052505050565b600061114a610e1d565b9050611156828261110f565b919050565b600067ffffffffffffffff821115611176576111756110e0565b5b602082029050602081019050919050565b600080fd5b600061119f61119a8461115b565b611140565b905080838252602082019050602084028301858111156111c2576111c1611187565b5b835b818110156111eb57806111d7888261101f565b8452602084019350506020810190506111c4565b5050509392505050565b600082601f83011261120a576112096110ca565b5b813561121a84826020860161118c565b91505092915050565b600080fd5b600067ffffffffffffffff821115611243576112426110e0565b5b61124c826110cf565b9050602081019050919050565b82818337600083830152505050565b600061127b61127684611228565b611140565b90508281526020810184848401111561129757611296611223565b5b6112a2848285611259565b509392505050565b600082601f8301126112bf576112be6110ca565b5b81356112cf848260208601611268565b91505092915050565b600080600080600060a086880312156112f4576112f3610e27565b5b6000611302888289016110b5565b9550506020611313888289016110b5565b945050604086013567ffffffffffffffff81111561133457611333610e2c565b5b611340888289016111f5565b935050606086013567ffffffffffffffff81111561136157611360610e2c565b5b61136d888289016111f5565b925050608086013567ffffffffffffffff81111561138e5761138d610e2c565b5b61139a888289016112aa565b9150509295509295909350565b6113b081610e31565b82525050565b60006020820190506113cb60008301846113a7565b92915050565b600080600080600060a086880312156113ed576113ec610e27565b5b60006113fb888289016110b5565b955050602061140c888289016110b5565b945050604061141d8882890161101f565b935050606061142e8882890161101f565b925050608086013567ffffffffffffffff81111561144f5761144e610e2c565b5b61145b888289016112aa565b9150509295509295909350565b60006020828403121561147e5761147d610e27565b5b600061148c848285016110b5565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114dc602083611495565b91506114e7826114a6565b602082019050919050565b6000602082019050818103600083015261150b816114cf565b9050919050565b7f496e76616c696420455243323020616d6f756e74000000000000000000000000600082015250565b6000611548601483611495565b915061155382611512565b602082019050919050565b600060208201905081810360008301526115778161153b565b9050919050565b60008151905061158d81611008565b92915050565b6000602082840312156115a9576115a8610e27565b5b60006115b78482850161157e565b91505092915050565b60006040820190506115d56000830185610fd4565b6115e26020830184611074565b9392505050565b7f496e76616c6964204552433131353520616d6f756e7400000000000000000000600082015250565b600061161f601683611495565b915061162a826115e9565b602082019050919050565b6000602082019050818103600083015261164e81611612565b9050919050565b600082825260208201905092915050565b50565b6000611676600083611655565b915061168182611666565b600082019050919050565b600060a0820190506116a16000830187610fd4565b6116ae6020830186610fd4565b6116bb6040830185611074565b6116c86060830184611074565b81810360808301526116d981611669565b905095945050505050565b6116ed81610eb6565b81146116f857600080fd5b50565b60008151905061170a816116e4565b92915050565b60006020828403121561172657611725610e27565b5b6000611734848285016116fb565b91505092915050565b60006040820190506117526000830185611074565b61175f6020830184611074565b9392505050565b600060608201905061177b6000830186611074565b6117886020830185611074565b6117956040830184611074565b949350505050565b60006060820190506117b26000830186610fd4565b6117bf6020830185610fd4565b6117cc6040830184611074565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611830602683611495565b915061183b826117d4565b604082019050919050565b6000602082019050818103600083015261185f81611823565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118a082610ffe565b91506118ab83610ffe565b92508282026118b981610ffe565b915082820484148315176118d0576118cf611866565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061191182610ffe565b915061191c83610ffe565b92508261192c5761192b6118d7565b5b82820490509291505056fea2646970667358221220b4f2d59be3579380b16d6bb5ac5c6805206194ed654c709139bf856a04225c4664736f6c63430008130033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC124C58 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBC124C58 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0xC215A97C EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0xD7695990 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x245 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x21F42268 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x107 JUMPI DUP1 PUSH4 0x8A13EEA7 EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x93068DF2 EQ PUSH2 0x14D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xE89 JUMP JUMPDEST PUSH2 0x261 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE0 SWAP2 SWAP1 PUSH2 0xED1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF1 PUSH2 0x2DB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFE SWAP2 SWAP1 PUSH2 0xF6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10F PUSH2 0x301 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x119 PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x126 SWAP2 SWAP1 PUSH2 0xFA7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x137 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x144 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x167 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x3D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x174 SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x12D8 JUMP JUMPDEST PUSH2 0x7B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C0 SWAP2 SWAP1 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x7CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FA SWAP2 SWAP1 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x9FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1083 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0xBAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0xBC4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x2D4 JUMPI POP PUSH2 0x2D3 DUP3 PUSH2 0xCBB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x309 PUSH2 0xD25 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x327 PUSH2 0x3AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x37D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x374 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x387 PUSH1 0x0 PUSH2 0xD2D JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0x41C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x413 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x479 SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x496 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BA SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51A SWAP3 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x537 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55B SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP PUSH2 0x582 DUP3 PUSH2 0x574 DUP4 DUP9 PUSH2 0xDF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C6 SWAP1 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5DB DUP3 DUP5 PUSH2 0x9FB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x658 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x66C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6CD SWAP3 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x710 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDF273CB619D95419A9CD0EC88123A0538C85064229BAA6363788F743FFF90DEB DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x759 SWAP3 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x48B2EF2F7EFB11FEF3B83A2E524D39E3D9366A7CD9A756981F750E5AB527DB4 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x7AB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x810 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP1 PUSH2 0x155E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x81C DUP4 DUP4 PUSH2 0x3D8 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x87D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x179D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x89C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8C0 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A CALLER ADDRESS DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x922 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x168C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x93C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x950 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x99C SWAP3 SWAP2 SWAP1 PUSH2 0x173D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x72D229D9B6FBFEC38D163EA1310B2549D831F540E79B7194A93FE94B84378987 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9EE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1766 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 GT PUSH2 0xA3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA36 SWAP1 PUSH2 0x1635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA9C SWAP2 SWAP1 PUSH2 0xFE3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAB9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xADD SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E ADDRESS DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP3 SWAP2 SWAP1 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB7E SWAP2 SWAP1 PUSH2 0x1593 JUMP JUMPDEST SWAP1 POP PUSH2 0xBA5 DUP2 PUSH2 0xB97 DUP5 DUP9 PUSH2 0xDF1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xE07 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xBCC PUSH2 0xD25 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBEA PUSH2 0x3AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA6 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB8 DUP2 PUSH2 0xD2D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xDFF SWAP2 SWAP1 PUSH2 0x1895 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0xE15 SWAP2 SWAP1 PUSH2 0x1906 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE66 DUP2 PUSH2 0xE31 JUMP JUMPDEST DUP2 EQ PUSH2 0xE71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xE83 DUP2 PUSH2 0xE5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE9F JUMPI PUSH2 0xE9E PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xEAD DUP5 DUP3 DUP6 ADD PUSH2 0xE74 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xECB DUP2 PUSH2 0xEB6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xEC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF31 PUSH2 0xF2C PUSH2 0xF27 DUP5 PUSH2 0xEEC JUMP JUMPDEST PUSH2 0xF0C JUMP JUMPDEST PUSH2 0xEEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF43 DUP3 PUSH2 0xF16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF55 DUP3 PUSH2 0xF38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF65 DUP2 PUSH2 0xF4A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xF80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF91 DUP3 PUSH2 0xF38 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA1 DUP2 PUSH2 0xF86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFBC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF98 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFCD DUP3 PUSH2 0xEEC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFDD DUP2 PUSH2 0xFC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xFD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1011 DUP2 PUSH2 0xFFE JUMP JUMPDEST DUP2 EQ PUSH2 0x101C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x102E DUP2 PUSH2 0x1008 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x104B JUMPI PUSH2 0x104A PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1059 DUP6 DUP3 DUP7 ADD PUSH2 0x101F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x106A DUP6 DUP3 DUP7 ADD PUSH2 0x101F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x107D DUP2 PUSH2 0xFFE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1098 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10A7 DUP2 PUSH2 0xFC2 JUMP JUMPDEST DUP2 EQ PUSH2 0x10B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10C4 DUP2 PUSH2 0x109E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1118 DUP3 PUSH2 0x10CF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1137 JUMPI PUSH2 0x1136 PUSH2 0x10E0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114A PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP PUSH2 0x1156 DUP3 DUP3 PUSH2 0x110F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1176 JUMPI PUSH2 0x1175 PUSH2 0x10E0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x119F PUSH2 0x119A DUP5 PUSH2 0x115B JUMP JUMPDEST PUSH2 0x1140 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x11C2 JUMPI PUSH2 0x11C1 PUSH2 0x1187 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11EB JUMPI DUP1 PUSH2 0x11D7 DUP9 DUP3 PUSH2 0x101F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x11C4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x120A JUMPI PUSH2 0x1209 PUSH2 0x10CA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x121A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x118C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1243 JUMPI PUSH2 0x1242 PUSH2 0x10E0 JUMP JUMPDEST JUMPDEST PUSH2 0x124C DUP3 PUSH2 0x10CF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x127B PUSH2 0x1276 DUP5 PUSH2 0x1228 JUMP JUMPDEST PUSH2 0x1140 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1297 JUMPI PUSH2 0x1296 PUSH2 0x1223 JUMP JUMPDEST JUMPDEST PUSH2 0x12A2 DUP5 DUP3 DUP6 PUSH2 0x1259 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x12BF JUMPI PUSH2 0x12BE PUSH2 0x10CA JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x12CF DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1268 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x12F4 JUMPI PUSH2 0x12F3 PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1302 DUP9 DUP3 DUP10 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x1313 DUP9 DUP3 DUP10 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1334 JUMPI PUSH2 0x1333 PUSH2 0xE2C JUMP JUMPDEST JUMPDEST PUSH2 0x1340 DUP9 DUP3 DUP10 ADD PUSH2 0x11F5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1361 JUMPI PUSH2 0x1360 PUSH2 0xE2C JUMP JUMPDEST JUMPDEST PUSH2 0x136D DUP9 DUP3 DUP10 ADD PUSH2 0x11F5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x138E JUMPI PUSH2 0x138D PUSH2 0xE2C JUMP JUMPDEST JUMPDEST PUSH2 0x139A DUP9 DUP3 DUP10 ADD PUSH2 0x12AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x13B0 DUP2 PUSH2 0xE31 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13CB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x13ED JUMPI PUSH2 0x13EC PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FB DUP9 DUP3 DUP10 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x140C DUP9 DUP3 DUP10 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x141D DUP9 DUP3 DUP10 ADD PUSH2 0x101F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x142E DUP9 DUP3 DUP10 ADD PUSH2 0x101F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x144F JUMPI PUSH2 0x144E PUSH2 0xE2C JUMP JUMPDEST JUMPDEST PUSH2 0x145B DUP9 DUP3 DUP10 ADD PUSH2 0x12AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x147E JUMPI PUSH2 0x147D PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148C DUP5 DUP3 DUP6 ADD PUSH2 0x10B5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14DC PUSH1 0x20 DUP4 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH2 0x14E7 DUP3 PUSH2 0x14A6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x150B DUP2 PUSH2 0x14CF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420455243323020616D6F756E74000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1548 PUSH1 0x14 DUP4 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH2 0x1553 DUP3 PUSH2 0x1512 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1577 DUP2 PUSH2 0x153B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x158D DUP2 PUSH2 0x1008 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A9 JUMPI PUSH2 0x15A8 PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15B7 DUP5 DUP3 DUP6 ADD PUSH2 0x157E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x15D5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x15E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964204552433131353520616D6F756E7400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x161F PUSH1 0x16 DUP4 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH2 0x162A DUP3 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x164E DUP2 PUSH2 0x1612 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1676 PUSH1 0x0 DUP4 PUSH2 0x1655 JUMP JUMPDEST SWAP2 POP PUSH2 0x1681 DUP3 PUSH2 0x1666 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x16A1 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x16AE PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x16BB PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x16C8 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x16D9 DUP2 PUSH2 0x1669 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16ED DUP2 PUSH2 0xEB6 JUMP JUMPDEST DUP2 EQ PUSH2 0x16F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x170A DUP2 PUSH2 0x16E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1726 JUMPI PUSH2 0x1725 PUSH2 0xE27 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1734 DUP5 DUP3 DUP6 ADD PUSH2 0x16FB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1752 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x175F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x177B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x1788 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1074 JUMP JUMPDEST PUSH2 0x1795 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x17B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x17BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xFD4 JUMP JUMPDEST PUSH2 0x17CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1074 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1830 PUSH1 0x26 DUP4 PUSH2 0x1495 JUMP JUMPDEST SWAP2 POP PUSH2 0x183B DUP3 PUSH2 0x17D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x185F DUP2 PUSH2 0x1823 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x18A0 DUP3 PUSH2 0xFFE JUMP JUMPDEST SWAP2 POP PUSH2 0x18AB DUP4 PUSH2 0xFFE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x18B9 DUP2 PUSH2 0xFFE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x18D0 JUMPI PUSH2 0x18CF PUSH2 0x1866 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1911 DUP3 PUSH2 0xFFE JUMP JUMPDEST SWAP2 POP PUSH2 0x191C DUP4 PUSH2 0xFFE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x192C JUMPI PUSH2 0x192B PUSH2 0x18D7 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB4 CALLCODE 0xD5 SWAP12 0xE3 JUMPI SWAP4 DUP1 0xB1 PUSH14 0x6BB5AC5C6805206194ED654C7091 CODECOPY 0xBF DUP6 PUSH11 0x4225C4664736F6C634300 ADDMOD SGT STOP CALLER ",
          "sourceMap": "439:2853:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;387:221:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;548:28:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:0;;;:::i;:::-;;583:24:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2339:470:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1803:528;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;724:247:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1257:538:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2817:472;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;499:219:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;387:221:4;489:4;527:34;512:49;;;:11;:49;;;;:89;;;;565:36;589:11;565:23;:36::i;:::-;512:89;505:96;;387:221;;;:::o;548:28:10:-;;;;;;;;;;;;;:::o;1668:101:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;583:24:10:-;;;;;;;;;;;;;:::o;1036:85:0:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;2339:470:10:-;2455:21;2511:1;2497:11;:15;2489:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;2550:20;2573:10;;;;;;;;;;;:20;;;2602:4;2573:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2550:58;;2619:22;2644:12;;;;;;;;;;;:22;;;2675:4;2682:7;2644:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2619:71;;2719:49;2755:12;2719:31;2735:14;2719:11;:15;;:31;;;;:::i;:::-;:35;;:49;;;;:::i;:::-;2703:65;;2781:20;;2339:470;;;;:::o;1803:528::-;1916:1;1900:13;:17;1892:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;1957:19;1979:46;2002:13;2017:7;1979:22;:46::i;:::-;1957:68;;2038:12;;;;;;;;;;;:29;;;2068:10;2088:4;2095:7;2104:13;2038:84;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2133:10;;;;;;;;;;;:19;;;2153:10;2165:11;2133:44;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2204:10;2193:46;;;2216:7;2225:13;2193:46;;;;;;;:::i;:::-;;;;;;;;2275:10;2255:68;;;2287:7;2296:13;2311:11;2255:68;;;;;;;;:::i;:::-;;;;;;;;1881:450;1803:528;;:::o;724:247:3:-;903:6;928:36;;;921:43;;724:247;;;;;;;:::o;1257:538:10:-;1366:1;1352:11;:15;1344:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1405:21;1429:44;1452:11;1465:7;1429:22;:44::i;:::-;1405:68;;1486:10;;;;;;;;;;;:23;;;1510:10;1530:4;1537:11;1486:63;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1560:12;;;;;;;;;;;:29;;;1590:10;1610:4;1617:7;1626:13;1560:84;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:10;1660:43;;;1680:7;1689:13;1660:43;;;;;;;:::i;:::-;;;;;;;;1739:10;1719:68;;;1751:11;1764:7;1773:13;1719:68;;;;;;;;:::i;:::-;;;;;;;;1333:462;1257:538;;:::o;2817:472::-;2935:19;2991:1;2975:13;:17;2967:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;3032:20;3055:10;;;;;;;;;;;:20;;;3084:4;3055:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3032:58;;3101:22;3126:12;;;;;;;;;;;:22;;;3157:4;3164:7;3126:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3101:71;;3199:51;3235:14;3199:31;3217:12;3199:13;:17;;:31;;;;:::i;:::-;:35;;:51;;;;:::i;:::-;3185:65;;3263:18;;2817:472;;;;:::o;499:219:3:-;655:6;680:31;;;673:38;;499:219;;;;;;;:::o;1918:198:0:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;2270:187:0:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;3451:96:9:-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:60::-;1678:3;1699:5;1692:12;;1650:60;;;:::o;1716:142::-;1766:9;1799:53;1817:34;1826:24;1844:5;1826:24;:::i;:::-;1817:34;:::i;:::-;1799:53;:::i;:::-;1786:66;;1716:142;;;:::o;1864:126::-;1914:9;1947:37;1978:5;1947:37;:::i;:::-;1934:50;;1864:126;;;:::o;1996:142::-;2062:9;2095:37;2126:5;2095:37;:::i;:::-;2082:50;;1996:142;;;:::o;2144:163::-;2247:53;2294:5;2247:53;:::i;:::-;2242:3;2235:66;2144:163;;:::o;2313:254::-;2422:4;2460:2;2449:9;2445:18;2437:26;;2473:87;2557:1;2546:9;2542:17;2533:6;2473:87;:::i;:::-;2313:254;;;;:::o;2573:140::-;2637:9;2670:37;2701:5;2670:37;:::i;:::-;2657:50;;2573:140;;;:::o;2719:159::-;2820:51;2865:5;2820:51;:::i;:::-;2815:3;2808:64;2719:159;;:::o;2884:250::-;2991:4;3029:2;3018:9;3014:18;3006:26;;3042:85;3124:1;3113:9;3109:17;3100:6;3042:85;:::i;:::-;2884:250;;;;:::o;3140:96::-;3177:7;3206:24;3224:5;3206:24;:::i;:::-;3195:35;;3140:96;;;:::o;3242:118::-;3329:24;3347:5;3329:24;:::i;:::-;3324:3;3317:37;3242:118;;:::o;3366:222::-;3459:4;3497:2;3486:9;3482:18;3474:26;;3510:71;3578:1;3567:9;3563:17;3554:6;3510:71;:::i;:::-;3366:222;;;;:::o;3594:77::-;3631:7;3660:5;3649:16;;3594:77;;;:::o;3677:122::-;3750:24;3768:5;3750:24;:::i;:::-;3743:5;3740:35;3730:63;;3789:1;3786;3779:12;3730:63;3677:122;:::o;3805:139::-;3851:5;3889:6;3876:20;3867:29;;3905:33;3932:5;3905:33;:::i;:::-;3805:139;;;;:::o;3950:474::-;4018:6;4026;4075:2;4063:9;4054:7;4050:23;4046:32;4043:119;;;4081:79;;:::i;:::-;4043:119;4201:1;4226:53;4271:7;4262:6;4251:9;4247:22;4226:53;:::i;:::-;4216:63;;4172:117;4328:2;4354:53;4399:7;4390:6;4379:9;4375:22;4354:53;:::i;:::-;4344:63;;4299:118;3950:474;;;;;:::o;4430:118::-;4517:24;4535:5;4517:24;:::i;:::-;4512:3;4505:37;4430:118;;:::o;4554:222::-;4647:4;4685:2;4674:9;4670:18;4662:26;;4698:71;4766:1;4755:9;4751:17;4742:6;4698:71;:::i;:::-;4554:222;;;;:::o;4782:122::-;4855:24;4873:5;4855:24;:::i;:::-;4848:5;4845:35;4835:63;;4894:1;4891;4884:12;4835:63;4782:122;:::o;4910:139::-;4956:5;4994:6;4981:20;4972:29;;5010:33;5037:5;5010:33;:::i;:::-;4910:139;;;;:::o;5055:117::-;5164:1;5161;5154:12;5178:102;5219:6;5270:2;5266:7;5261:2;5254:5;5250:14;5246:28;5236:38;;5178:102;;;:::o;5286:180::-;5334:77;5331:1;5324:88;5431:4;5428:1;5421:15;5455:4;5452:1;5445:15;5472:281;5555:27;5577:4;5555:27;:::i;:::-;5547:6;5543:40;5685:6;5673:10;5670:22;5649:18;5637:10;5634:34;5631:62;5628:88;;;5696:18;;:::i;:::-;5628:88;5736:10;5732:2;5725:22;5515:238;5472:281;;:::o;5759:129::-;5793:6;5820:20;;:::i;:::-;5810:30;;5849:33;5877:4;5869:6;5849:33;:::i;:::-;5759:129;;;:::o;5894:311::-;5971:4;6061:18;6053:6;6050:30;6047:56;;;6083:18;;:::i;:::-;6047:56;6133:4;6125:6;6121:17;6113:25;;6193:4;6187;6183:15;6175:23;;5894:311;;;:::o;6211:117::-;6320:1;6317;6310:12;6351:710;6447:5;6472:81;6488:64;6545:6;6488:64;:::i;:::-;6472:81;:::i;:::-;6463:90;;6573:5;6602:6;6595:5;6588:21;6636:4;6629:5;6625:16;6618:23;;6689:4;6681:6;6677:17;6669:6;6665:30;6718:3;6710:6;6707:15;6704:122;;;6737:79;;:::i;:::-;6704:122;6852:6;6835:220;6869:6;6864:3;6861:15;6835:220;;;6944:3;6973:37;7006:3;6994:10;6973:37;:::i;:::-;6968:3;6961:50;7040:4;7035:3;7031:14;7024:21;;6911:144;6895:4;6890:3;6886:14;6879:21;;6835:220;;;6839:21;6453:608;;6351:710;;;;;:::o;7084:370::-;7155:5;7204:3;7197:4;7189:6;7185:17;7181:27;7171:122;;7212:79;;:::i;:::-;7171:122;7329:6;7316:20;7354:94;7444:3;7436:6;7429:4;7421:6;7417:17;7354:94;:::i;:::-;7345:103;;7161:293;7084:370;;;;:::o;7460:117::-;7569:1;7566;7559:12;7583:307;7644:4;7734:18;7726:6;7723:30;7720:56;;;7756:18;;:::i;:::-;7720:56;7794:29;7816:6;7794:29;:::i;:::-;7786:37;;7878:4;7872;7868:15;7860:23;;7583:307;;;:::o;7896:146::-;7993:6;7988:3;7983;7970:30;8034:1;8025:6;8020:3;8016:16;8009:27;7896:146;;;:::o;8048:423::-;8125:5;8150:65;8166:48;8207:6;8166:48;:::i;:::-;8150:65;:::i;:::-;8141:74;;8238:6;8231:5;8224:21;8276:4;8269:5;8265:16;8314:3;8305:6;8300:3;8296:16;8293:25;8290:112;;;8321:79;;:::i;:::-;8290:112;8411:54;8458:6;8453:3;8448;8411:54;:::i;:::-;8131:340;8048:423;;;;;:::o;8490:338::-;8545:5;8594:3;8587:4;8579:6;8575:17;8571:27;8561:122;;8602:79;;:::i;:::-;8561:122;8719:6;8706:20;8744:78;8818:3;8810:6;8803:4;8795:6;8791:17;8744:78;:::i;:::-;8735:87;;8551:277;8490:338;;;;:::o;8834:1509::-;8988:6;8996;9004;9012;9020;9069:3;9057:9;9048:7;9044:23;9040:33;9037:120;;;9076:79;;:::i;:::-;9037:120;9196:1;9221:53;9266:7;9257:6;9246:9;9242:22;9221:53;:::i;:::-;9211:63;;9167:117;9323:2;9349:53;9394:7;9385:6;9374:9;9370:22;9349:53;:::i;:::-;9339:63;;9294:118;9479:2;9468:9;9464:18;9451:32;9510:18;9502:6;9499:30;9496:117;;;9532:79;;:::i;:::-;9496:117;9637:78;9707:7;9698:6;9687:9;9683:22;9637:78;:::i;:::-;9627:88;;9422:303;9792:2;9781:9;9777:18;9764:32;9823:18;9815:6;9812:30;9809:117;;;9845:79;;:::i;:::-;9809:117;9950:78;10020:7;10011:6;10000:9;9996:22;9950:78;:::i;:::-;9940:88;;9735:303;10105:3;10094:9;10090:19;10077:33;10137:18;10129:6;10126:30;10123:117;;;10159:79;;:::i;:::-;10123:117;10264:62;10318:7;10309:6;10298:9;10294:22;10264:62;:::i;:::-;10254:72;;10048:288;8834:1509;;;;;;;;:::o;10349:115::-;10434:23;10451:5;10434:23;:::i;:::-;10429:3;10422:36;10349:115;;:::o;10470:218::-;10561:4;10599:2;10588:9;10584:18;10576:26;;10612:69;10678:1;10667:9;10663:17;10654:6;10612:69;:::i;:::-;10470:218;;;;:::o;10694:1089::-;10798:6;10806;10814;10822;10830;10879:3;10867:9;10858:7;10854:23;10850:33;10847:120;;;10886:79;;:::i;:::-;10847:120;11006:1;11031:53;11076:7;11067:6;11056:9;11052:22;11031:53;:::i;:::-;11021:63;;10977:117;11133:2;11159:53;11204:7;11195:6;11184:9;11180:22;11159:53;:::i;:::-;11149:63;;11104:118;11261:2;11287:53;11332:7;11323:6;11312:9;11308:22;11287:53;:::i;:::-;11277:63;;11232:118;11389:2;11415:53;11460:7;11451:6;11440:9;11436:22;11415:53;:::i;:::-;11405:63;;11360:118;11545:3;11534:9;11530:19;11517:33;11577:18;11569:6;11566:30;11563:117;;;11599:79;;:::i;:::-;11563:117;11704:62;11758:7;11749:6;11738:9;11734:22;11704:62;:::i;:::-;11694:72;;11488:288;10694:1089;;;;;;;;:::o;11789:329::-;11848:6;11897:2;11885:9;11876:7;11872:23;11868:32;11865:119;;;11903:79;;:::i;:::-;11865:119;12023:1;12048:53;12093:7;12084:6;12073:9;12069:22;12048:53;:::i;:::-;12038:63;;11994:117;11789:329;;;;:::o;12124:169::-;12208:11;12242:6;12237:3;12230:19;12282:4;12277:3;12273:14;12258:29;;12124:169;;;;:::o;12299:182::-;12439:34;12435:1;12427:6;12423:14;12416:58;12299:182;:::o;12487:366::-;12629:3;12650:67;12714:2;12709:3;12650:67;:::i;:::-;12643:74;;12726:93;12815:3;12726:93;:::i;:::-;12844:2;12839:3;12835:12;12828:19;;12487:366;;;:::o;12859:419::-;13025:4;13063:2;13052:9;13048:18;13040:26;;13112:9;13106:4;13102:20;13098:1;13087:9;13083:17;13076:47;13140:131;13266:4;13140:131;:::i;:::-;13132:139;;12859:419;;;:::o;13284:170::-;13424:22;13420:1;13412:6;13408:14;13401:46;13284:170;:::o;13460:366::-;13602:3;13623:67;13687:2;13682:3;13623:67;:::i;:::-;13616:74;;13699:93;13788:3;13699:93;:::i;:::-;13817:2;13812:3;13808:12;13801:19;;13460:366;;;:::o;13832:419::-;13998:4;14036:2;14025:9;14021:18;14013:26;;14085:9;14079:4;14075:20;14071:1;14060:9;14056:17;14049:47;14113:131;14239:4;14113:131;:::i;:::-;14105:139;;13832:419;;;:::o;14257:143::-;14314:5;14345:6;14339:13;14330:22;;14361:33;14388:5;14361:33;:::i;:::-;14257:143;;;;:::o;14406:351::-;14476:6;14525:2;14513:9;14504:7;14500:23;14496:32;14493:119;;;14531:79;;:::i;:::-;14493:119;14651:1;14676:64;14732:7;14723:6;14712:9;14708:22;14676:64;:::i;:::-;14666:74;;14622:128;14406:351;;;;:::o;14763:332::-;14884:4;14922:2;14911:9;14907:18;14899:26;;14935:71;15003:1;14992:9;14988:17;14979:6;14935:71;:::i;:::-;15016:72;15084:2;15073:9;15069:18;15060:6;15016:72;:::i;:::-;14763:332;;;;;:::o;15101:172::-;15241:24;15237:1;15229:6;15225:14;15218:48;15101:172;:::o;15279:366::-;15421:3;15442:67;15506:2;15501:3;15442:67;:::i;:::-;15435:74;;15518:93;15607:3;15518:93;:::i;:::-;15636:2;15631:3;15627:12;15620:19;;15279:366;;;:::o;15651:419::-;15817:4;15855:2;15844:9;15840:18;15832:26;;15904:9;15898:4;15894:20;15890:1;15879:9;15875:17;15868:47;15932:131;16058:4;15932:131;:::i;:::-;15924:139;;15651:419;;;:::o;16076:168::-;16159:11;16193:6;16188:3;16181:19;16233:4;16228:3;16224:14;16209:29;;16076:168;;;;:::o;16250:114::-;;:::o;16370:362::-;16511:3;16532:65;16595:1;16590:3;16532:65;:::i;:::-;16525:72;;16606:93;16695:3;16606:93;:::i;:::-;16724:1;16719:3;16715:11;16708:18;;16370:362;;;:::o;16738:859::-;17015:4;17053:3;17042:9;17038:19;17030:27;;17067:71;17135:1;17124:9;17120:17;17111:6;17067:71;:::i;:::-;17148:72;17216:2;17205:9;17201:18;17192:6;17148:72;:::i;:::-;17230;17298:2;17287:9;17283:18;17274:6;17230:72;:::i;:::-;17312;17380:2;17369:9;17365:18;17356:6;17312:72;:::i;:::-;17432:9;17426:4;17422:20;17416:3;17405:9;17401:19;17394:49;17460:130;17585:4;17460:130;:::i;:::-;17452:138;;16738:859;;;;;;;:::o;17603:116::-;17673:21;17688:5;17673:21;:::i;:::-;17666:5;17663:32;17653:60;;17709:1;17706;17699:12;17653:60;17603:116;:::o;17725:137::-;17779:5;17810:6;17804:13;17795:22;;17826:30;17850:5;17826:30;:::i;:::-;17725:137;;;;:::o;17868:345::-;17935:6;17984:2;17972:9;17963:7;17959:23;17955:32;17952:119;;;17990:79;;:::i;:::-;17952:119;18110:1;18135:61;18188:7;18179:6;18168:9;18164:22;18135:61;:::i;:::-;18125:71;;18081:125;17868:345;;;;:::o;18219:332::-;18340:4;18378:2;18367:9;18363:18;18355:26;;18391:71;18459:1;18448:9;18444:17;18435:6;18391:71;:::i;:::-;18472:72;18540:2;18529:9;18525:18;18516:6;18472:72;:::i;:::-;18219:332;;;;;:::o;18557:442::-;18706:4;18744:2;18733:9;18729:18;18721:26;;18757:71;18825:1;18814:9;18810:17;18801:6;18757:71;:::i;:::-;18838:72;18906:2;18895:9;18891:18;18882:6;18838:72;:::i;:::-;18920;18988:2;18977:9;18973:18;18964:6;18920:72;:::i;:::-;18557:442;;;;;;:::o;19005:::-;19154:4;19192:2;19181:9;19177:18;19169:26;;19205:71;19273:1;19262:9;19258:17;19249:6;19205:71;:::i;:::-;19286:72;19354:2;19343:9;19339:18;19330:6;19286:72;:::i;:::-;19368;19436:2;19425:9;19421:18;19412:6;19368:72;:::i;:::-;19005:442;;;;;;:::o;19453:225::-;19593:34;19589:1;19581:6;19577:14;19570:58;19662:8;19657:2;19649:6;19645:15;19638:33;19453:225;:::o;19684:366::-;19826:3;19847:67;19911:2;19906:3;19847:67;:::i;:::-;19840:74;;19923:93;20012:3;19923:93;:::i;:::-;20041:2;20036:3;20032:12;20025:19;;19684:366;;;:::o;20056:419::-;20222:4;20260:2;20249:9;20245:18;20237:26;;20309:9;20303:4;20299:20;20295:1;20284:9;20280:17;20273:47;20337:131;20463:4;20337:131;:::i;:::-;20329:139;;20056:419;;;:::o;20481:180::-;20529:77;20526:1;20519:88;20626:4;20623:1;20616:15;20650:4;20647:1;20640:15;20667:410;20707:7;20730:20;20748:1;20730:20;:::i;:::-;20725:25;;20764:20;20782:1;20764:20;:::i;:::-;20759:25;;20819:1;20816;20812:9;20841:30;20859:11;20841:30;:::i;:::-;20830:41;;21020:1;21011:7;21007:15;21004:1;21001:22;20981:1;20974:9;20954:83;20931:139;;21050:18;;:::i;:::-;20931:139;20715:362;20667:410;;;;:::o;21083:180::-;21131:77;21128:1;21121:88;21228:4;21225:1;21218:15;21252:4;21249:1;21242:15;21269:185;21309:1;21326:20;21344:1;21326:20;:::i;:::-;21321:25;;21360:20;21378:1;21360:20;:::i;:::-;21355:25;;21399:1;21389:35;;21404:18;;:::i;:::-;21389:35;21446:1;21443;21439:9;21434:14;;21269:185;;;;:::o"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "1301800",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "erc1155Token()": "infinite",
            "erc20Token()": "infinite",
            "getQuoteERC1155ToERC20(uint256,uint256)": "infinite",
            "getQuoteERC20ToERC1155(uint256,uint256)": "infinite",
            "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
            "onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
            "owner()": "2611",
            "renounceOwnership()": "30419",
            "supportsInterface(bytes4)": "728",
            "swapERC1155ForERC20(uint256,uint256)": "infinite",
            "swapERC20ForERC1155(uint256,uint256)": "infinite",
            "transferOwnership(address)": "30830"
          }
        },
        "methodIdentifiers": {
          "erc1155Token()": "21f42268",
          "erc20Token()": "8a13eea7",
          "getQuoteERC1155ToERC20(uint256,uint256)": "d7695990",
          "getQuoteERC20ToERC1155(uint256,uint256)": "93068df2",
          "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
          "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
          "owner()": "8da5cb5b",
          "renounceOwnership()": "715018a6",
          "supportsInterface(bytes4)": "01ffc9a7",
          "swapERC1155ForERC20(uint256,uint256)": "bc124c58",
          "swapERC20ForERC1155(uint256,uint256)": "c215a97c",
          "transferOwnership(address)": "f2fde38b"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc1155Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc1155Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc20Amount\",\"type\":\"uint256\"}],\"name\":\"SwapERC1155ForERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc20Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc1155Amount\",\"type\":\"uint256\"}],\"name\":\"SwapERC20ForERC1155\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"erc1155Token\",\"outputs\":[{\"internalType\":\"contract IERC1155\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20Token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc1155Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getQuoteERC1155ToERC20\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20Amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getQuoteERC20ToERC1155\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc1155Amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc1155Amount\",\"type\":\"uint256\"}],\"name\":\"swapERC1155ForERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"swapERC20ForERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LiquidityPool.sol\":\"LiquidityPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC1155Receiver.sol\\\";\\n\\n/**\\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\\n *\\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\\n * stuck.\\n *\\n * @dev _Available since v3.1._\\n */\\ncontract ERC1155Holder is ERC1155Receiver {\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC1155Received.selector;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] memory,\\n        uint256[] memory,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC1155BatchReceived.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x2e024ca51ce5abe16c0d34e6992a1104f356e2244eb4ccbec970435e8b3405e3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Receiver.sol\\\";\\nimport \\\"../../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n}\\n\",\"keccak256\":\"0x3dd5e1a66a56f30302108a1da97d677a42b1daa60e503696b2bcbbf3e4c95bcb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\"},\"contracts/LiquidityPool.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract LiquidityPool is IERC1155Receiver, ERC1155Holder, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    IERC1155 public erc1155Token;\\r\\n    IERC20 public erc20Token;\\r\\n\\r\\n    event Deposit(address indexed account, uint256 tokenId, uint256 amount);\\r\\n    event Withdrawal(address indexed account, uint256 tokenId, uint256 amount);\\r\\n    event SwapERC20ForERC1155(\\r\\n        address indexed user,\\r\\n        uint256 erc20Amount,\\r\\n        uint256 tokenId,\\r\\n        uint256 erc1155Amount\\r\\n    );\\r\\n    event SwapERC1155ForERC20(\\r\\n        address indexed user,\\r\\n        uint256 tokenId,\\r\\n        uint256 erc1155Amount,\\r\\n        uint256 erc20Amount\\r\\n    );\\r\\n\\r\\n    constructor(address _erc1155Token, address _erc20Token) {\\r\\n        erc1155Token = IERC1155(_erc1155Token);\\r\\n        erc20Token = IERC20(_erc20Token);\\r\\n    }\\r\\n\\r\\n    function swapERC20ForERC1155(uint256 erc20Amount, uint256 tokenId) external {\\r\\n        require(erc20Amount > 0, \\\"Invalid ERC20 amount\\\");\\r\\n\\r\\n        uint256 erc1155Amount = getQuoteERC20ToERC1155(erc20Amount, tokenId);\\r\\n\\r\\n        erc20Token.transferFrom(msg.sender, address(this), erc20Amount);\\r\\n        erc1155Token.safeTransferFrom(msg.sender, address(this), tokenId, erc1155Amount, \\\"\\\");\\r\\n        emit Deposit(msg.sender, tokenId, erc1155Amount);\\r\\n        emit SwapERC20ForERC1155(msg.sender, erc20Amount, tokenId, erc1155Amount);\\r\\n    }\\r\\n\\r\\n    function swapERC1155ForERC20(uint256 tokenId, uint256 erc1155Amount) external {\\r\\n        require(erc1155Amount > 0, \\\"Invalid ERC1155 amount\\\");\\r\\n\\r\\n        uint256 erc20Amount = getQuoteERC1155ToERC20(erc1155Amount, tokenId);\\r\\n\\r\\n        erc1155Token.safeTransferFrom(msg.sender, address(this), tokenId, erc1155Amount, \\\"\\\");\\r\\n        erc20Token.transfer(msg.sender, erc20Amount);\\r\\n        emit Withdrawal(msg.sender, tokenId, erc1155Amount);\\r\\n        emit SwapERC1155ForERC20(msg.sender, tokenId, erc1155Amount, erc20Amount);\\r\\n    }\\r\\n\\r\\n    function getQuoteERC20ToERC1155(\\r\\n        uint256 erc20Amount,\\r\\n        uint256 tokenId\\r\\n    ) public view returns (uint256 erc1155Amount) {\\r\\n        require(erc20Amount > 0, \\\"Invalid ERC20 amount\\\");\\r\\n\\r\\n        uint256 tokenBalance = erc20Token.balanceOf(address(this));\\r\\n        uint256 erc1155Reserve = erc1155Token.balanceOf(address(this), tokenId);\\r\\n\\r\\n        erc1155Amount = erc20Amount.mul(erc1155Reserve).div(tokenBalance);\\r\\n\\r\\n        return erc1155Amount;\\r\\n    }\\r\\n\\r\\n    function getQuoteERC1155ToERC20(\\r\\n        uint256 erc1155Amount,\\r\\n        uint256 tokenId\\r\\n    ) public view returns (uint256 erc20Amount) {\\r\\n        require(erc1155Amount > 0, \\\"Invalid ERC1155 amount\\\");\\r\\n\\r\\n        uint256 tokenBalance = erc20Token.balanceOf(address(this));\\r\\n        uint256 erc1155Reserve = erc1155Token.balanceOf(address(this), tokenId);\\r\\n\\r\\n        erc20Amount = erc1155Amount.mul(tokenBalance).div(erc1155Reserve);\\r\\n\\r\\n        return erc20Amount;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xd854af5bd70b9f99e39dbe60fb7e6f6ec5e19e2ea9deabea96eef99b203f084a\",\"license\":\"MIT\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 7,
            "contract": "contracts/LiquidityPool.sol:LiquidityPool",
            "label": "_owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 820,
            "contract": "contracts/LiquidityPool.sol:LiquidityPool",
            "label": "erc1155Token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC1155)226"
          },
          {
            "astId": 823,
            "contract": "contracts/LiquidityPool.sol:LiquidityPool",
            "label": "erc20Token",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)430"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_contract(IERC1155)226": {
            "encoding": "inplace",
            "label": "contract IERC1155",
            "numberOfBytes": "20"
          },
          "t_contract(IERC20)430": {
            "encoding": "inplace",
            "label": "contract IERC20",
            "numberOfBytes": "20"
          }
        }
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"@openzeppelin/contracts/access/Ownable.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/IERC1155.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\\n *\\n * _Available since v3.1._\\n */\\ninterface IERC1155 is IERC165 {\\n    /**\\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\\n     */\\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\\n\\n    /**\\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\\n     * transfers.\\n     */\\n    event TransferBatch(\\n        address indexed operator,\\n        address indexed from,\\n        address indexed to,\\n        uint256[] ids,\\n        uint256[] values\\n    );\\n\\n    /**\\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\\n     * `approved`.\\n     */\\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\\n     *\\n     * If an {URI} event was emitted for `id`, the standard\\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\\n     * returned by {IERC1155MetadataURI-uri}.\\n     */\\n    event URI(string value, uint256 indexed id);\\n\\n    /**\\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function balanceOf(address account, uint256 id) external view returns (uint256);\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\\n     *\\n     * Requirements:\\n     *\\n     * - `accounts` and `ids` must have the same length.\\n     */\\n    function balanceOfBatch(address[] calldata accounts, uint256[] calldata ids)\\n        external\\n        view\\n        returns (uint256[] memory);\\n\\n    /**\\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `operator` cannot be the caller.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\\n     *\\n     * See {setApprovalForAll}.\\n     */\\n    function isApprovedForAll(address account, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\\n     *\\n     * Emits a {TransferSingle} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - If the caller is not `from`, it must be have been approved to spend ``from``'s tokens via {setApprovalForAll}.\\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\\n     * acceptance magic value.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 id,\\n        uint256 amount,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\\n     *\\n     * Emits a {TransferBatch} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `ids` and `amounts` must have the same length.\\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\\n     * acceptance magic value.\\n     */\\n    function safeBatchTransferFrom(\\n        address from,\\n        address to,\\n        uint256[] calldata ids,\\n        uint256[] calldata amounts,\\n        bytes calldata data\\n    ) external;\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\ninterface IERC1155Receiver is IERC165 {\\n    /**\\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\\n     *\\n     * NOTE: To accept the transfer, this must return\\n     * `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\\n     * (i.e. 0xf23a6e61, or its own function selector).\\n     *\\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param id The ID of the token being transferred\\n     * @param value The amount of tokens being transferred\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155Received(\\n        address operator,\\n        address from,\\n        uint256 id,\\n        uint256 value,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n\\n    /**\\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\\n     * been updated.\\n     *\\n     * NOTE: To accept the transfer(s), this must return\\n     * `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\\n     * (i.e. 0xbc197c81, or its own function selector).\\n     *\\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\\n     * @param from The address which previously owned the token\\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\\n     * @param data Additional data with no specified format\\n     * @return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\\n     */\\n    function onERC1155BatchReceived(\\n        address operator,\\n        address from,\\n        uint256[] calldata ids,\\n        uint256[] calldata values,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/utils/ERC1155Holder.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./ERC1155Receiver.sol\\\";\\n\\n/**\\n * Simple implementation of `ERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\\n *\\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\\n * stuck.\\n *\\n * @dev _Available since v3.1._\\n */\\ncontract ERC1155Holder is ERC1155Receiver {\\n    function onERC1155Received(\\n        address,\\n        address,\\n        uint256,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC1155Received.selector;\\n    }\\n\\n    function onERC1155BatchReceived(\\n        address,\\n        address,\\n        uint256[] memory,\\n        uint256[] memory,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC1155BatchReceived.selector;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Receiver.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/utils/ERC1155Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC1155Receiver.sol\\\";\\nimport \\\"../../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev _Available since v3.1._\\n */\\nabstract contract ERC1155Receiver is ERC165, IERC1155Receiver {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/token/ERC20/IERC20.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/Context.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/ERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/introspection/IERC165.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\"\n    },\n    \"@openzeppelin/contracts/utils/math/SafeMath.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\"\n    },\n    \"contracts/LiquidityPool.sol\": {\n      \"content\": \"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.19;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\ncontract LiquidityPool is IERC1155Receiver, ERC1155Holder, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    IERC1155 public erc1155Token;\\r\\n    IERC20 public erc20Token;\\r\\n\\r\\n    event Deposit(address indexed account, uint256 tokenId, uint256 amount);\\r\\n    event Withdrawal(address indexed account, uint256 tokenId, uint256 amount);\\r\\n    event SwapERC20ForERC1155(\\r\\n        address indexed user,\\r\\n        uint256 erc20Amount,\\r\\n        uint256 tokenId,\\r\\n        uint256 erc1155Amount\\r\\n    );\\r\\n    event SwapERC1155ForERC20(\\r\\n        address indexed user,\\r\\n        uint256 tokenId,\\r\\n        uint256 erc1155Amount,\\r\\n        uint256 erc20Amount\\r\\n    );\\r\\n\\r\\n    constructor(address _erc1155Token, address _erc20Token) {\\r\\n        erc1155Token = IERC1155(_erc1155Token);\\r\\n        erc20Token = IERC20(_erc20Token);\\r\\n    }\\r\\n\\r\\n    function swapERC20ForERC1155(uint256 erc20Amount, uint256 tokenId) external {\\r\\n        require(erc20Amount > 0, \\\"Invalid ERC20 amount\\\");\\r\\n\\r\\n        uint256 erc1155Amount = getQuoteERC20ToERC1155(erc20Amount, tokenId);\\r\\n\\r\\n        erc20Token.transferFrom(msg.sender, address(this), erc20Amount);\\r\\n        erc1155Token.safeTransferFrom(msg.sender, address(this), tokenId, erc1155Amount, \\\"\\\");\\r\\n        emit Deposit(msg.sender, tokenId, erc1155Amount);\\r\\n        emit SwapERC20ForERC1155(msg.sender, erc20Amount, tokenId, erc1155Amount);\\r\\n    }\\r\\n\\r\\n    function swapERC1155ForERC20(uint256 tokenId, uint256 erc1155Amount) external {\\r\\n        require(erc1155Amount > 0, \\\"Invalid ERC1155 amount\\\");\\r\\n\\r\\n        uint256 erc20Amount = getQuoteERC1155ToERC20(erc1155Amount, tokenId);\\r\\n\\r\\n        erc1155Token.safeTransferFrom(msg.sender, address(this), tokenId, erc1155Amount, \\\"\\\");\\r\\n        erc20Token.transfer(msg.sender, erc20Amount);\\r\\n        emit Withdrawal(msg.sender, tokenId, erc1155Amount);\\r\\n        emit SwapERC1155ForERC20(msg.sender, tokenId, erc1155Amount, erc20Amount);\\r\\n    }\\r\\n\\r\\n    function getQuoteERC20ToERC1155(\\r\\n        uint256 erc20Amount,\\r\\n        uint256 tokenId\\r\\n    ) public view returns (uint256 erc1155Amount) {\\r\\n        require(erc20Amount > 0, \\\"Invalid ERC20 amount\\\");\\r\\n\\r\\n        uint256 tokenBalance = erc20Token.balanceOf(address(this));\\r\\n        uint256 erc1155Reserve = erc1155Token.balanceOf(address(this), tokenId);\\r\\n\\r\\n        erc1155Amount = erc20Amount.mul(erc1155Reserve).div(tokenBalance);\\r\\n\\r\\n        return erc1155Amount;\\r\\n    }\\r\\n\\r\\n    function getQuoteERC1155ToERC20(\\r\\n        uint256 erc1155Amount,\\r\\n        uint256 tokenId\\r\\n    ) public view returns (uint256 erc20Amount) {\\r\\n        require(erc1155Amount > 0, \\\"Invalid ERC1155 amount\\\");\\r\\n\\r\\n        uint256 tokenBalance = erc20Token.balanceOf(address(this));\\r\\n        uint256 erc1155Reserve = erc1155Token.balanceOf(address(this), tokenId);\\r\\n\\r\\n        erc20Amount = erc1155Amount.mul(tokenBalance).div(erc1155Reserve);\\r\\n\\r\\n        return erc20Amount;\\r\\n    }\\r\\n}\\r\\n\"\n    }\n  },\n  \"settings\": {\n    \"optimizer\": {\n      \"enabled\": false,\n      \"runs\": 200\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
      "solcInputHash": "306828fb8b435f88cd577b33b434514a",
      "transactionHash": "0xe7ba7f00499f2e9cdcf8e5af56b8c9ffebc02cdea5de631f684bde7211f7ff1d",
      "args": [
        "0x3223dc5213747413597b2347998c6D04232474fe",
        "0x876C7a614d49d5E973b08A46fe1D914Aab44d268"
      ]
    },
    "decoded": {
      "from": "0xd69a4dd0dfb261a8EF37F45925491C077EF1dBFb",
      "gasPrice": "8000000000",
      "gasLimit": "1532393",
      "to": null,
      "value": "0",
      "nonce": 183,
      "data": "0x60806040523480156200001157600080fd5b5060405162001bdb38038062001bdb833981810160405281019062000037919062000217565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b620001f181620001d2565b8114620001fd57600080fd5b50565b6000815190506200021181620001e6565b92915050565b60008060408385031215620002315762000230620001ad565b5b6000620002418582860162000200565b9250506020620002548582860162000200565b9150509250929050565b61196d806200026e6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063bc124c5811610071578063bc124c581461017d578063bc197c8114610199578063c215a97c146101c9578063d7695990146101e5578063f23a6e6114610215578063f2fde38b14610245576100b4565b806301ffc9a7146100b957806321f42268146100e9578063715018a6146101075780638a13eea7146101115780638da5cb5b1461012f57806393068df21461014d575b600080fd5b6100d360048036038101906100ce9190610e89565b610261565b6040516100e09190610ed1565b60405180910390f35b6100f16102db565b6040516100fe9190610f6b565b60405180910390f35b61010f610301565b005b610119610389565b6040516101269190610fa7565b60405180910390f35b6101376103af565b6040516101449190610fe3565b60405180910390f35b61016760048036038101906101629190611034565b6103d8565b6040516101749190611083565b60405180910390f35b61019760048036038101906101929190611034565b61058c565b005b6101b360048036038101906101ae91906112d8565b6107b8565b6040516101c091906113b6565b60405180910390f35b6101e360048036038101906101de9190611034565b6107cd565b005b6101ff60048036038101906101fa9190611034565b6109fb565b60405161020c9190611083565b60405180910390f35b61022f600480360381019061022a91906113d1565b610baf565b60405161023c91906113b6565b60405180910390f35b61025f600480360381019061025a9190611468565b610bc4565b005b60007f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806102d457506102d382610cbb565b5b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610309610d25565b73ffffffffffffffffffffffffffffffffffffffff166103276103af565b73ffffffffffffffffffffffffffffffffffffffff161461037d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610374906114f2565b60405180910390fd5b6103876000610d2d565b565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080831161041c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104139061155e565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104799190610fe3565b602060405180830381865afa158015610496573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ba9190611593565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30866040518363ffffffff1660e01b815260040161051a9291906115c0565b602060405180830381865afa158015610537573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055b9190611593565b9050610582826105748388610df190919063ffffffff16565b610e0790919063ffffffff16565b9250505092915050565b600081116105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c690611635565b60405180910390fd5b60006105db82846109fb565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333086866040518563ffffffff1660e01b815260040161063e949392919061168c565b600060405180830381600087803b15801561065857600080fd5b505af115801561066c573d6000803e3d6000fd5b50505050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106cd9291906115c0565b6020604051808303816000875af11580156106ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107109190611710565b503373ffffffffffffffffffffffffffffffffffffffff167fdf273cb619d95419a9cd0ec88123a0538c85064229baa6363788f743fff90deb848460405161075992919061173d565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f048b2ef2f7efb11fef3b83a2e524d39e3d9366a7cd9a756981f750e5ab527db48484846040516107ab93929190611766565b60405180910390a2505050565b600063bc197c8160e01b905095945050505050565b60008211610810576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108079061155e565b60405180910390fd5b600061081c83836103d8565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b815260040161087d9392919061179d565b6020604051808303816000875af115801561089c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c09190611710565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a333085856040518563ffffffff1660e01b8152600401610922949392919061168c565b600060405180830381600087803b15801561093c57600080fd5b505af1158015610950573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15838360405161099c92919061173d565b60405180910390a23373ffffffffffffffffffffffffffffffffffffffff167f72d229d9b6fbfec38d163ea1310b2549d831f540e79b7194a93fe94b843789878484846040516109ee93929190611766565b60405180910390a2505050565b6000808311610a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3690611635565b60405180910390fd5b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a9c9190610fe3565b602060405180830381865afa158015610ab9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610add9190611593565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e30866040518363ffffffff1660e01b8152600401610b3d9291906115c0565b602060405180830381865afa158015610b5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b7e9190611593565b9050610ba581610b978488610df190919063ffffffff16565b610e0790919063ffffffff16565b9250505092915050565b600063f23a6e6160e01b905095945050505050565b610bcc610d25565b73ffffffffffffffffffffffffffffffffffffffff16610bea6103af565b73ffffffffffffffffffffffffffffffffffffffff1614610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c37906114f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610caf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ca690611846565b60405180910390fd5b610cb881610d2d565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008183610dff9190611895565b905092915050565b60008183610e159190611906565b905092915050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610e6681610e31565b8114610e7157600080fd5b50565b600081359050610e8381610e5d565b92915050565b600060208284031215610e9f57610e9e610e27565b5b6000610ead84828501610e74565b91505092915050565b60008115159050919050565b610ecb81610eb6565b82525050565b6000602082019050610ee66000830184610ec2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610f31610f2c610f2784610eec565b610f0c565b610eec565b9050919050565b6000610f4382610f16565b9050919050565b6000610f5582610f38565b9050919050565b610f6581610f4a565b82525050565b6000602082019050610f806000830184610f5c565b92915050565b6000610f9182610f38565b9050919050565b610fa181610f86565b82525050565b6000602082019050610fbc6000830184610f98565b92915050565b6000610fcd82610eec565b9050919050565b610fdd81610fc2565b82525050565b6000602082019050610ff86000830184610fd4565b92915050565b6000819050919050565b61101181610ffe565b811461101c57600080fd5b50565b60008135905061102e81611008565b92915050565b6000806040838503121561104b5761104a610e27565b5b60006110598582860161101f565b925050602061106a8582860161101f565b9150509250929050565b61107d81610ffe565b82525050565b60006020820190506110986000830184611074565b92915050565b6110a781610fc2565b81146110b257600080fd5b50565b6000813590506110c48161109e565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611118826110cf565b810181811067ffffffffffffffff82111715611137576111366110e0565b5b80604052505050565b600061114a610e1d565b9050611156828261110f565b919050565b600067ffffffffffffffff821115611176576111756110e0565b5b602082029050602081019050919050565b600080fd5b600061119f61119a8461115b565b611140565b905080838252602082019050602084028301858111156111c2576111c1611187565b5b835b818110156111eb57806111d7888261101f565b8452602084019350506020810190506111c4565b5050509392505050565b600082601f83011261120a576112096110ca565b5b813561121a84826020860161118c565b91505092915050565b600080fd5b600067ffffffffffffffff821115611243576112426110e0565b5b61124c826110cf565b9050602081019050919050565b82818337600083830152505050565b600061127b61127684611228565b611140565b90508281526020810184848401111561129757611296611223565b5b6112a2848285611259565b509392505050565b600082601f8301126112bf576112be6110ca565b5b81356112cf848260208601611268565b91505092915050565b600080600080600060a086880312156112f4576112f3610e27565b5b6000611302888289016110b5565b9550506020611313888289016110b5565b945050604086013567ffffffffffffffff81111561133457611333610e2c565b5b611340888289016111f5565b935050606086013567ffffffffffffffff81111561136157611360610e2c565b5b61136d888289016111f5565b925050608086013567ffffffffffffffff81111561138e5761138d610e2c565b5b61139a888289016112aa565b9150509295509295909350565b6113b081610e31565b82525050565b60006020820190506113cb60008301846113a7565b92915050565b600080600080600060a086880312156113ed576113ec610e27565b5b60006113fb888289016110b5565b955050602061140c888289016110b5565b945050604061141d8882890161101f565b935050606061142e8882890161101f565b925050608086013567ffffffffffffffff81111561144f5761144e610e2c565b5b61145b888289016112aa565b9150509295509295909350565b60006020828403121561147e5761147d610e27565b5b600061148c848285016110b5565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006114dc602083611495565b91506114e7826114a6565b602082019050919050565b6000602082019050818103600083015261150b816114cf565b9050919050565b7f496e76616c696420455243323020616d6f756e74000000000000000000000000600082015250565b6000611548601483611495565b915061155382611512565b602082019050919050565b600060208201905081810360008301526115778161153b565b9050919050565b60008151905061158d81611008565b92915050565b6000602082840312156115a9576115a8610e27565b5b60006115b78482850161157e565b91505092915050565b60006040820190506115d56000830185610fd4565b6115e26020830184611074565b9392505050565b7f496e76616c6964204552433131353520616d6f756e7400000000000000000000600082015250565b600061161f601683611495565b915061162a826115e9565b602082019050919050565b6000602082019050818103600083015261164e81611612565b9050919050565b600082825260208201905092915050565b50565b6000611676600083611655565b915061168182611666565b600082019050919050565b600060a0820190506116a16000830187610fd4565b6116ae6020830186610fd4565b6116bb6040830185611074565b6116c86060830184611074565b81810360808301526116d981611669565b905095945050505050565b6116ed81610eb6565b81146116f857600080fd5b50565b60008151905061170a816116e4565b92915050565b60006020828403121561172657611725610e27565b5b6000611734848285016116fb565b91505092915050565b60006040820190506117526000830185611074565b61175f6020830184611074565b9392505050565b600060608201905061177b6000830186611074565b6117886020830185611074565b6117956040830184611074565b949350505050565b60006060820190506117b26000830186610fd4565b6117bf6020830185610fd4565b6117cc6040830184611074565b949350505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611830602683611495565b915061183b826117d4565b604082019050919050565b6000602082019050818103600083015261185f81611823565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118a082610ffe565b91506118ab83610ffe565b92508282026118b981610ffe565b915082820484148315176118d0576118cf611866565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061191182610ffe565b915061191c83610ffe565b92508261192c5761192b6118d7565b5b82820490509291505056fea2646970667358221220b4f2d59be3579380b16d6bb5ac5c6805206194ed654c709139bf856a04225c4664736f6c634300081300330000000000000000000000003223dc5213747413597b2347998c6d04232474fe000000000000000000000000876c7a614d49d5e973b08a46fe1d914aab44d268",
      "r": "0x51618d725f8a48756c2decc32e507b66e3307518d1aa682abf67f64159605d8f",
      "s": "0x74f35bb44e6c1c900255d1f3ec8ba805834ccb21f9664aee60fb50d58947f916",
      "v": 160038,
      "chainId": 80001
    }
  }
}